ger.ardb[,'Undetermined'] <- NULL
colnames(ger.ardb) %in% sid.key$metaphlan_barcode
## replace sample IDs to match 16S data
colnames(ger.ardb) <- sid.key$uparse_sampleid[match(colnames(ger.ardb), sid.key$metaphlan_barcode)]
## Gerlinger metadata
ger.cat <- data.frame('SampleID' = colnames(ger.ardb),
'SampleType' = rep('Indoor', length(colnames(ger.ardb))),
'Env' = rep('Gerlinger', length(colnames(ger.ardb))))
## check that datasets match
identical(rownames(ger.ardb), rownames(hut.ardb)) # TRUE
## combine datasets and sort
all.ardb <- cbind(ger.ardb, hut.ardb)
all.cat <- rbind(ger.cat, hut.cat)
colnames(all.ardb) %in% all.cat$SampleID
## simplify all antibiotics to one summed RPKM measurement
all.ardb.sum <- colSums(all.ardb)
all.cat$AbRes_RPKM <- all.ardb.sum[match(names(all.ardb.sum), all.cat$SampleID)]
## set theme_bw
theme_set(theme_bw())
## violin plot of 3 studies
gg.ardb.vio <- ggplot(all.cat, aes(x = Env, y = AbRes_RPKM, color = Env, fill = Env))
gg.ardb.vio + geom_violin(adjust = 0.75, alpha = 0.3) +
geom_boxplot(width = 0.1, aes(fill = Env), color = 'black', outlier.color = NA) +
stat_summary(fun.y = median, geom = 'point', fill = 'white', shape = 21, size = 2.5) +
scale_color_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Gerlinger',
'Built_Environment',
'Human')) +
scale_fill_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Gerlinger',
'Built_Environment',
'Human')) +
scale_x_discrete(limits = c('Gerlinger',
'Built_Environment',
'Human'),
labels = c('Present Study',
'Other Built\nEnvironment Studies',
'Human Microbiome\nStudies')) +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
ylab('Total antibiotic resistance gene families (RPKM)') +
theme(legend.position = 'none', axis.title.x = element_blank())
ggsave('figures/ger_mbta_hmp_ardb_violin_log.png', width = 8, height = 8)
## prep data in long format
all.ardb.tp <- as.data.frame(t(all.ardb))
all.ardb.tp$SampleID <- rownames(all.ardb.tp)
all.ardb.tp$Env <- factor(all.cat$Env[match(all.cat$SampleID, all.ardb.tp$SampleID)],
levels = c('Human', 'Built_Environment', 'Gerlinger'))
all.ardb.lg <- melt(all.ardb.tp, id.vars = c('SampleID', 'Env'))
colnames(all.ardb.lg) <- c('SampleID', 'Env', 'AbResFam', 'RPKM')
## dot plot of all ab res gene families
gg.ardb.dot <- ggplot(all.ardb.lg, aes(x = AbResFam, y = RPKM, color = Env,
alpha = Env, shape = Env))
gg.ardb.dot + geom_point(position = 'jitter', aes(order = rev(seq(1, nrow(all.ardb.lg))))) +
scale_color_manual(name = 'Study',
limits = c('Gerlinger', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c('darkmagenta', '#0049FF', '#00A4DE')) +
scale_shape_manual(name = 'Study',
limits = c('Gerlinger', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c(17, 2, 1)) +
scale_alpha_discrete(name = 'Study',
limits = c('Gerlinger', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
range = rev(c(0.1, 1))) +
xlab('Antibiotic Resistance Gene Families') +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
legend.position = 'bottom')
ggsave('figures/ger_mbta_hmp_ardb_dot_log.png', width = 8, height = 6)
## dot plot of all ab res gene families in Gerlinger found in 2+ samples
ger.ardb.1plus <- as.data.frame(t(ger.ardb[rowSums(ger.ardb) > 0,]))
ger.ardb.2plus  <- ger.ardb.1plus[,colSums(ger.ardb.1plus != 0) >= 2]
ger.ardb.2plus$SampleID <- rownames(ger.ardb.2plus)
ger.ardb.2plus.lg <- melt(ger.ardb.2plus, id.vars = 'SampleID')
colnames(ger.ardb.2plus.lg) <- c('SampleID', 'AbResFam', 'RPKM')
gg.ardb.ger.dot <- ggplot(ger.ardb.2plus.lg, aes(x = AbResFam, y = RPKM, color = AbResFam))
gg.ardb.ger.dot + geom_point(alpha = 0.5, color = 'darkmagenta', shape = 17,
aes(order = rev(seq(1, nrow(ger.ardb.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Family') +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
ggsave('figures/ger_ardb_dot.png', width = 10, height = 8)
## summary stats for RPKM
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Gerlinger'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Built_Environment'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Human'])
################################
## Gerlinger ARDB data
ger.card <- read.table('data/shortbred_card/151207_gerlinger_shortbred_merged_card_barcode_sampleid.txt',
sep = '\t', header = T, row.names = 1)
## remove zero-sum samples (no sequence data)
ger.card <- ger.card[ , colSums(ger.card) > 0]
## check if all samples in master sample ID key
colnames(ger.card) %in% sid.key$metaphlan_barcode
colnames(ger.card)[!(colnames(ger.card) %in% sid.key$metaphlan_barcode)]
## remove 'undetermined' sample
ger.card[,'Undetermined'] <- NULL
colnames(ger.card) %in% sid.key$metaphlan_barcode
## replace sample IDs to match 16S data
colnames(ger.card) <- sid.key$uparse_sampleid[match(colnames(ger.card), sid.key$metaphlan_barcode)]
save.image('~/Documents/projects/gerlinger/results/ger_shortbred_abres_plots.RData')
load('results/otu_setup/ger_rm_contaminants.RData')
load('results/ger_abres_extra_plots.RData')
load('results/ger_shortbred_abres_plots.RData')
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist)
}
dev.off()
ger.chem <- ger.map[,c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')]
identical(rownames(ger.nc.6500), rownames(ger.chem))
euc.chem <- dist(ger.chem) # same as bray-curtis
plot(bc.nc ~ euc.chem)
mantel(bc.nc, euc.chem, na.rm = TRUE)
mantel(bc.nc, euc.chem, method = 'spearman', na.rm = TRUE)
mantel(bc.nc, euc.chem, method = 'kendall', na.rm = TRUE)
ger.chem.2 <- ger.chem[rownames(ger.chem) %in% colnames(ger.ardb),]
ger.chem.2 <- ger.chem.2[match(rownames(t(ger.ardb)), rownames(ger.chem.2)),]
identical(rownames(t(ger.ardb)), rownames(ger.chem.2))
euc.chem.2 <- dist(ger.chem.2)
plot(bc.ardb ~ euc.chem.2)
mantel(bc.ardb, euc.chem.2, na.rm = TRUE)
bc.card <- vegdist(t(ger.card))
pcoa.bc.card <- cmdscale(bc.card, eig = TRUE)
plot(pcoa.bc.card$points, type = 'p')
df.pcoa.bc.card <- as.data.frame(pcoa.bc.card$points)
colnames(df.pcoa.bc.card) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.card$SampleID <- rownames(df.pcoa.bc.card)
df.pcoa.bc.card.all <- merge(df.pcoa.bc.card, ger.meta.map)
theme_set(theme_bw())
gg.pcoa.bc.card <- ggplot(df.pcoa.bc.card.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.card + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.ardb + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
gg.pcoa.bc.card + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
ggsave('figures/pcoa_bc_card_sampletype.png', width = 8, height = 6.5, units = 'in')
## Perform exploratory ecological analysis on taxonomic data
## 2015-12-03
## Roxana Hickey <roxana.hickey@gmail.com>
setwd('~/Documents/projects/gerlinger/')
library(ggplot2)
library(RColorBrewer)
library(vegan)
library(labdsv)
library(plyr)
library(phyloseq)
library(gplots)
## load previously processed metagenomic data
load('results/otu_setup/ger_rm_contaminants_meta.RData')
load('~/Documents/projects/gerlinger/results/ger_shortbred_abres_plots.RData')
## pcoa based on ARDB genes
bc.ardb <- vegdist(t(ger.ardb))
pcoa.bc.ardb <- cmdscale(bc.ardb, eig = TRUE)
plot(pcoa.bc.ardb$points, type = 'p')
## plot Bray-Curtis PCoA
df.pcoa.bc.ardb <- as.data.frame(pcoa.bc.ardb$points)
colnames(df.pcoa.bc.ardb) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.ardb$SampleID <- rownames(df.pcoa.bc.ardb)
df.pcoa.bc.ardb.all <- merge(df.pcoa.bc.ardb, ger.meta.map)
## set theme_bw
theme_set(theme_bw())
## all samples by space type
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.ardb + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
ggsave('figures/pcoa_bc_ardb_sampletype.png', width = 8, height = 6.5, units = 'in')
####################################
## plot Bray-Curtis pcoa with crack/chem data
## crack area NSF
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8), name = 'Crack Area') +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
ggsave('figures/pcoa_bc_ardb_crackarea.png', width = 8, height = 6.5, units = 'in')
## chem = TCSavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Triclosan')
ggsave('figures/pcoa_bc_ardb_TCSavg.png', width = 8, height = 6.5, units = 'in')
## chem = TCCavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCCavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Trichlorocarbanilide')
ggsave('figures/pcoa_bc_ardb_TCCavg.png', width = 8, height = 6.5, units = 'in')
## chem = MePBavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = MePBavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Methylparaben')
ggsave('figures/pcoa_bc_ardb_MePBavg.png', width = 8, height = 6.5, units = 'in')
## chem = EtPBavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = EtPBavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Ethylparaben')
ggsave('figures/pcoa_bc_ardb_EtPBavg.png', width = 8, height = 6.5, units = 'in')
## chem = PrPBavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = PrPBavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Propylparaben')
ggsave('figures/pcoa_bc_ardb_PrPBavg.png', width = 8, height = 6.5, units = 'in')
## chem = BuBPavg
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = BuPBavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control')) +
scale_size_continuous(range = c(3,8), name = 'Butylparaben')
ggsave('figures/pcoa_bc_ardb_BuPBavg.png', width = 8, height = 6.5, units = 'in')
## plot RPKM ~ [chem]
ger.cat$AbRes_RPKM <- colSums(ger.ardb)
ger.cat.meta.map <- merge(ger.cat, ger.meta.map)
ger.ardb.chem <- ger.cat.meta.map[,c('SampleID', 'AbRes_RPKM', 'TCSavg', 'TCCavg',
'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')]
ger.ardb.chem.lg <- melt(ger.ardb.chem, id.vars = c('SampleID', 'AbRes_RPKM'))
colnames(ger.ardb.chem.lg) <- c('SampleID', 'AbRes_RPKM', 'Chemical', 'AvgValue')
gg.ardb.chem.line <- ggplot(ger.ardb.chem.lg, aes(y = AbRes_RPKM, x = AvgValue, group = Chemical, color = Chemical))
gg.ardb.chem.line + geom_point() +
stat_smooth(method = 'loess', aes(fill = Chemical)) +
facet_wrap( ~ Chemical, nrow = 2, scales = 'free') +
ylab('Total antibiotic resistance gene families (RPKM)') +
xlab('Mean chemical concentration (ng/g)') +
scale_color_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
scale_fill_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
theme(legend.position = 'none')
ggsave('figures/chem_vs_ardb_loess.png', width = 8, height = 5, units = 'in')
gg.ardb.chem.line + geom_point() +
stat_smooth(method = 'lm', aes(fill = Chemical)) +
facet_wrap( ~ Chemical, nrow = 2, scales = 'free') +
ylab('Total antibiotic resistance gene families (RPKM)') +
xlab('Mean chemical concentration (ng/g)') +
scale_color_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
scale_fill_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
theme(legend.position = 'none')
ggsave('figures/chem_vs_ardb_linear.png', width = 8, height = 5, units = 'in')
##
# ger.ardb.chem$Erm23S7 <- t(ger.ardb['Erm23SRibosomalRNAMethyltransferase_7',
# match(ger.ardb.chem$SampleID, colnames(ger.ardb))])
gg.ardb.Erm23S.line <- ggplot(ger.ardb.chem, aes(y = Erm23SRibosomalRNAMethyltransferase_7, x = AvgValue, group = Chemical, color = Chemical))
gg.ardb.chem.line + geom_point() +
stat_smooth(method = 'loess', aes(fill = Chemical)) +
facet_wrap( ~ Chemical, nrow = 2, scales = 'free') +
ylab('Total antibiotic resistance gene families (RPKM)') +
xlab('Mean chemical concentration (ng/g)') +
scale_color_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
scale_fill_manual(values = c('#0000A9', '#0049FF', '#00A4DE', 'turquoise', 'chartreuse3', '#FFD701')) +
theme(legend.position = 'none')
####################################
## pcoa based on CARD genes
bc.card <- vegdist(t(ger.card))
pcoa.bc.card <- cmdscale(bc.card, eig = TRUE)
plot(pcoa.bc.card$points, type = 'p')
## plot Bray-Curtis PCoA
df.pcoa.bc.card <- as.data.frame(pcoa.bc.card$points)
colnames(df.pcoa.bc.card) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.card$SampleID <- rownames(df.pcoa.bc.card)
df.pcoa.bc.card.all <- merge(df.pcoa.bc.card, ger.meta.map)
## set theme_bw
theme_set(theme_bw())
## all samples by space type
gg.pcoa.bc.card <- ggplot(df.pcoa.bc.card.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.card + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.10, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom', 'neg.control'))
ggsave('figures/pcoa_bc_card_sampletype.png', width = 8, height = 6.5, units = 'in')
save.image('results/ger_abres_extra_plots.RData')
library(vegan)
setwd('~/Documents/projects/gerlinger/')
load('results/otu_setup/ger_rm_contaminants.RData')
# load('results/ger_shortbred_abres_plots.RData')
load('results/ger_abres_extra_plots.RData')
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist)
}
dev.off()
## distance matrix based on ger.chem
ger.chem <- ger.map[,c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')]
identical(rownames(ger.nc.6500), rownames(ger.chem))
euc.chem <- dist(ger.chem) # same as bray-curtis
## test bc.nc (taxonomic dissimilarity) ~ chemical distance matrix
plot(bc.nc ~ euc.chem)
mantel(bc.nc, euc.chem, na.rm = TRUE)
## test bc.ardb (ARDB dissimilarity)~ chemical distance matrix
ger.chem.2 <- ger.chem[rownames(ger.chem) %in% colnames(ger.ardb),]
ger.chem.2 <- ger.chem.2[match(rownames(t(ger.ardb)), rownames(ger.chem.2)),]
identical(rownames(t(ger.ardb)), rownames(ger.chem.2))
euc.chem.2 <- dist(ger.chem.2)
plot(bc.ardb ~ euc.chem.2)
mantel(bc.ardb, euc.chem.2, na.rm = TRUE)
identical(rownames(t(ger.card)), rownames(ger.chem.2))
plot(bc.card ~ euc.chem.2)
mantel(bc.card, euc.chem.2, na.rm = TRUE)
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist)
}
dev.off()
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist)
}
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist.tmp)
mantel(bc.nc, ger.dist.tmp, na.rm = TRUE)
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
# plot(bc.nc ~ ger.dist.tmp)
mantel(bc.nc, ger.dist.tmp, na.rm = TRUE)
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
# plot(bc.nc ~ ger.dist.tmp)
(mantel(bc.nc, ger.dist.tmp, na.rm = TRUE))
}
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist.tmp)
}
mantel(bc.nc, dist(ger.map[,'TCSavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'TCCavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'MePBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'EtPBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'PrPBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'BuPBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'TCCavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.map[,'TCSavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'TCSavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'TCCavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'MePBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'EtPBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'PrPBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'BuPBavg']), na.rm = TRUE)
mantel(bc.card, euc.chem.2, na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'TCSavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'TCCavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'MePBavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'PrPBavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'BuPBavg']), na.rm = TRUE)
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.ardb ~ ger.dist.tmp)
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.chem.2[,i])
plot(bc.ardb ~ ger.dist.tmp)
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.chem.2[,i])
plot(bc.card ~ ger.dist.tmp)
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.chem.2[,i])
plot(bc.card ~ ger.dist.tmp, main = i)
}
mantel(bc.nc, bc.ardb)
dim(ger.nc.6500)
dim(ger.ardb)
colnames(ger.ardb) %in% rownames(ger.nc.6500)
ger.nc.6500.matchardb <- ger.nc.6500[rownames(ger.nc.6500) %in% colnames(ger.ardb),]
identical(rownames(ger.nc.6500.matchardb), rownames(t(ger.ardb)))
ger.nc.6500.matchardb <- ger.nc.6500.matchardb[match(rownames(t(ger.ardb)), rownames(ger.nc.6500.matchardb)),]
identical(rownames(ger.nc.6500.matchardb), rownames(t(ger.ardb)))
mantel(vegdist(ger.nc.6500.matchardb), vegdist(t(ger.ardb)))
plot(vegdist(ger.nc.6500.matchardb), vegdist(t(ger.ardb)))
dev.off()
plot(vegdist(ger.nc.6500.matchardb), vegdist(t(ger.ardb)))
mantel(bc.nc, dist(ger.map[,'TCCavg']), na.rm = TRUE)
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist.tmp, main = i)
}
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist.tmp, main = i)
}
hist(ger.chem$TCCavg, breaks = 20)
hist(bc.nc, breaks = 20)
hist(bc.ardb, breaks = 20)
hist(bc.card, breaks = 20)
hist(vegdist(log(ger.ardb)), breaks = 20)
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
hist(ger.chem[,i], breaks = 20, main = i)
}
dev.off()
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
hist(ger.chem[,i], breaks = 20, main = i)
}
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
hist(ger.chem[,i], breaks = 20, col = 'darkmagenta', main = i)
}
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.map[,i])
plot(bc.nc ~ ger.dist.tmp, main = i, col = 'darkmagenta', )
}
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- dist(ger.chem.2[,i])
plot(bc.card ~ ger.dist.tmp, main = i, col = 'darkmagenta')
}
mantel(bc.nc, euc.chem, na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'TCSavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'TCCavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'MePBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'EtPBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'PrPBavg']), na.rm = TRUE)
mantel(bc.nc, dist(ger.map[,'BuPBavg']), na.rm = TRUE)
mantel(bc.ardb, euc.chem.2, na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'TCSavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'TCCavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'MePBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'EtPBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'PrPBavg']), na.rm = TRUE)
mantel(bc.ardb, dist(ger.chem.2[,'BuPBavg']), na.rm = TRUE)
mantel(bc.card, euc.chem.2, na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'TCSavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'TCCavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'MePBavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'EtPBavg']), na.rm = TRUE) ## * r = 0.1904, p = 0.012
mantel(bc.card, dist(ger.chem.2[,'PrPBavg']), na.rm = TRUE)
mantel(bc.card, dist(ger.chem.2[,'BuPBavg']), na.rm = TRUE)
mantel(vegdist(ger.nc.6500.matchardb), vegdist(t(ger.ardb)))
