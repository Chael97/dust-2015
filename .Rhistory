header = T, sep = '\t'))
## metadata
ger.cat <- data.frame('SampleID' = colnames(ger.ardb),
'SampleType' = rep('Indoor', length(colnames(ger.ardb))),
'Env' = rep('Mixed_Use', length(colnames(ger.ardb))))
## check that datasets match
identical(rownames(ger.ardb), rownames(hut.ardb)) # TRUE
## combine datasets and sort
all.ardb <- cbind(ger.ardb, hut.ardb)
all.cat <- rbind(ger.cat, hut.cat)
colnames(all.ardb) %in% all.cat$SampleID
all.ardb.sum <- colSums(all.ardb)
all.cat$AbRes_RPKM <- all.ardb.sum[match(names(all.ardb.sum), all.cat$SampleID)]
## set theme_bw
theme_set(theme_bw(base_size = 16))
gg.ardb.vio <- ggplot(all.cat, aes(x = Env, y = AbRes_RPKM, color = Env, fill = Env))
gg.ardb.vio + geom_violin(adjust = 0.75, alpha = 0.3) +
geom_boxplot(width = 0.1, aes(fill = Env), color = 'black', outlier.color = NA) +
stat_summary(fun.y = median, geom = 'point', fill = 'white', shape = 21, size = 2.5) +
scale_color_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Mixed_Use',
'Built_Environment',
'Human')) +
scale_fill_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Mixed_Use',
'Built_Environment',
'Human')) +
scale_x_discrete(limits = c('Mixed_Use',
'Built_Environment',
'Human'),
labels = c('Present Study',
'Other Built\nEnvironment Studies',
'Human Microbiome\nStudies')) +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
ylab('Total antibiotic resistance gene families (RPKM)') +
theme(legend.position = 'none', axis.title.x = element_blank())
all.ardb.tp <- as.data.frame(t(all.ardb))
all.ardb.tp$SampleID <- rownames(all.ardb.tp)
all.ardb.tp$Env <- factor(all.cat$Env[match(all.cat$SampleID, all.ardb.tp$SampleID)],
levels = c('Human', 'Built_Environment', 'Mixed_Use'))
all.ardb.lg <- melt(all.ardb.tp, id.vars = c('SampleID', 'Env'))
colnames(all.ardb.lg) <- c('SampleID', 'Env', 'AbResFam', 'RPKM')
## dot plot of all ab res gene families
gg.ardb.dot <- ggplot(all.ardb.lg, aes(x = AbResFam, y = RPKM, color = Env,
alpha = Env, shape = Env))
gg.ardb.dot + geom_point(position = 'jitter', aes(order = rev(seq(1, nrow(all.ardb.lg))))) +
scale_color_manual(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c('darkmagenta', '#0049FF', '#00A4DE')) +
scale_shape_manual(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c(17, 2, 1)) +
scale_alpha_discrete(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
range = rev(c(0.1, 1))) +
xlab('Antibiotic Resistance Gene Families') +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
legend.position = 'bottom')
ger.ardb.1plus <- as.data.frame(t(ger.ardb[rowSums(ger.ardb) > 0,]))
ger.ardb.2plus  <- ger.ardb.1plus[,colSums(ger.ardb.1plus != 0) >= 2]
ger.ardb.2plus$SampleID <- rownames(ger.ardb.2plus)
ger.ardb.2plus.lg <- melt(ger.ardb.2plus, id.vars = 'SampleID')
colnames(ger.ardb.2plus.lg) <- c('SampleID', 'AbResFam', 'RPKM')
ger.ardb.2plus.lg$AbResFamClass <- ardb.fam.id$Class[match(ger.ardb.2plus.lg$AbResFam, ardb.fam.id$Family)]
ger.ardb.2plus.lg$AbResFamClass2 <- paste0(ger.ardb.2plus.lg$AbResFamClass, ' (', ger.ardb.2plus.lg$AbResFam, ')')
ardb.fam.id.2plus <- ardb.fam.id[ardb.fam.id$Family %in% ger.ardb.2plus.lg$AbResFam,]
gg.ardb.ger.dot.f <- ggplot(ger.ardb.2plus.lg, aes(x = AbResFam, y = RPKM, color = AbResFamClass))
gg.ardb.ger.dot.f + geom_jitter(alpha = 0.7, position = position_jitter(width = 0.1),
aes(shape = AbResFamClass)) +
xlab('ARDB Gene Family') +
scale_x_discrete(limits = ardb.fam.id.2plus$Family[order(ardb.fam.id.2plus$Class)]) +
scale_shape_manual(values = c(16,15,17,16,15,17,16,15,17,16,15,17,16)) +
theme_bw() +
guides(color = guide_legend(title = 'ARDB Gene Class'),
shape = guide_legend(title = 'ARDB Gene Class')) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg.ardb.ger.dot.c <- ggplot(ger.ardb.2plus.lg, aes(x = AbResFamClass, y = RPKM))
gg.ardb.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.ardb.2plus.lg))))) +
xlab('ARDB Gene Class') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Mixed_Use'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Built_Environment'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Human'])
ger.card <- read.table('data/shortbred_card/151207_ger_shortbred_merged_card_barcode_sampleid.txt',
sep = '\t', header = T, row.names = 1)
View(ger.card)
ger.card <- ger.card[ , colSums(ger.card) > 0]
colnames(ger.card) %in% sid.key$metaphlan_barcode
colnames(ger.card)[!(colnames(ger.card) %in% sid.key$metaphlan_barcode)]
ger.card[,'Undetermined'] <- NULL
colnames(ger.card) %in% sid.key$metaphlan_barcode
colnames(ger.card) <- sid.key$uparse_sampleid[match(colnames(ger.card), sid.key$metaphlan_barcode)]
ger.card <- ger.card[, colnames(ger.card) %in% rownames(ger.meta)]
View(ger.card)
head(sid.key)
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
View(ger.card.new)
colnames(ger.card.new)
gsub("X_", "_", colnames(ger.card.new))
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
colnames(ger.card.new)
colnames(ger.card.new) %in% sid.key
head(sid.key)
colnames(ger.card.new) %in% sid.key$metaplan_id2
sid.key$metaplan_id2
str(sid.key)
sid.key$metaphlan_id2
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!colnames(ger.card.new) %in% sid.key$metaphlan_id2]
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
ger.card.new[,'Undetermined'] <- NULL
colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
head(ger.card.new)
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
View(ger.card.new)
card.new.id.key <- read.table('data/shortbred_card/160503_card_categories.txt',
sep = '\t', header = T, row.names = 1)
View(card.new.id.key)
str(card.new.id.key)
card.new.id.key <- read.table('data/shortbred_card/160503_card_categories.txt',
sep = '\t', header = T, row.names = 1)
str(card.new.id.key)
heatmap(ger.card.new)
heatmap(as.matrix(ger.card.new))
str(ger.card.new)
card.id.2plus <- read.table('data/shortbred_card/160503_card_abr_in_2plus.txt',
sep = '\t', header = T, row.names = 1)
head(card.id.2plus)
card.id.2plus <- readLines('data/shortbred_card/160503_card_abr_in_2plus.txt')
card.id.2plus <- readLines('data/shortbred_card/160503_card_abr_in_2plus.txt')
card.id.2plus <- readLines('data/shortbred_card/160503_card_abr_in_2plus.txt')
colSums(ger.card.new != 0)
rowSums(ger.card.new != 0)
ger.card.new[1:5,1:5]
sort(ger.card.new)
colSums(ger.card.new)
rowSums(ger.card.new)
sort(rowSums(ger.card.new), decreasing = T)[1:10]
colSums(ger.card.new != 0)
sort(rowSums(ger.card.new != 0), decreasing = T)
sort(rowSums(ger.card.new != 0), decreasing = T)[1:50]
sort(rowSums(ger.card.new != 0), decreasing = T)[1:10]
sort(rowSums(ger.card.new != 0), decreasing = T)[10:20]
sort(rowSums(ger.card.new != 0), decreasing = T)[20:30]
sort(rowSums(ger.card.new != 0), decreasing = T)[30:40]
sort(rowSums(ger.card.new >= 2), decreasing = T)
rowSums(ger.card.new >= 2)
rowSums(ger.card.new >= 2)
length(rowSums(ger.card.new >= 2))
rownames(ger.card.new)[rowSums(ger.card.new >= 2)]
pick <- rownames(ger.card.new)[rowSums(ger.card.new >= 2)]
card.id.2plus
card.id.2plus %in% pick
pick %in% card.id.2plus
head(pick)
head(card.id.2plus)
rowSums(ger.card.new[card.id.2plus,])
rowSums(ger.card.new != 0)
rowSums(ger.card.new != 0) >= 2
rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
pick <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
pick %in% card.id.2plus
card.id.2plus %in% pick
card.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
rm(pick)
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
card.new.id.key <- read.table('data/shortbred_card/160503_card_categories.txt',
sep = '\t', header = T, row.names = 1)
card.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
ger.card.new[,'Undetermined'] <- NULL
colnames(ger.card.new) %in% sid.key$metaphlan_barcode
colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
card.id.2plus
rownames(ger.card.new) %in% card.id.2plus
dim(ger.card.new)
ger.card.new.2plus <- ger.card.new[(rownames(ger.card.new) %in% card.id.2.plus),]
ger.card.new.2plus <- ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),]
dim(ger.card.new.2plus)
heatmap(ger.card.new.2plus)
heatmap(as.matrix(ger.card.new.2plus))
par(xpd = TRUE)
heatmap.2(t(ger.card.new.2plus), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'PuBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.card.new.2plus), 'Description'],
labRow = consensus.nc[colnames(ger.card.new.2plus)],
cexRow = 0.3 + 1/log10(nrow(ger.card.new.2plus)),
cexCol = 0.3 + 1/log10(nrow(ger.card.new.2plus)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.card.new.2plus), trace = 'none')
plot(ger.card.new.2plus)
heatmap(ger.card.new.2plus)
ger.card.new.2plus <- as.matrix(ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),])
heatmap.2(ger.card.new.2plus)
heatmap(ger.card.new.2plus)
heatmap.2(t(ger.card.new.2plus))
heatmap(ger.card.new.2plus)
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:25]
heatmap(t(ger.nc.prop[,pick]))
heatmap.2(t(ger.card.new.2plus))
heatmap.2(t(ger.card.new.2plus), trace = "non")
heatmap.2(t(ger.card.new.2plus), trace = "none")
heatmap.2(ger.card.new.2plus, trace = "none")
heatmap.2(ger.card.new.2plus, trace = "none", scale = "col")
heatmap.2(ger.card.new.2plus, trace = "none", scale = "row")
heatmap.2(ger.card.new.2plus, trace = "none", scale = "col")
heatmap.2(ger.card.new.2plus, trace = "none", scale = "row")
heatmap.2(ger.card.new.2plus, trace = "none", scale = "none")
heatmap(ger.card.new.2plus, scale = "none")
heatmap(ger.card.new.2plus, symm = FALSE)
heatmap(ger.card.new.2plus, scale = "row")
heatmap(ger.card.new.2plus, scale = "col")
heatmap(ger.card.new.2plus, scale = "none")
heatmap(ger.card.new.2plus, scale = "none")
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
card.new.id.key <- read.table('data/shortbred_card/160504_abr_in_2plus_aroontologies_clusters_toplevel_only.txt',
sep = '\t', header = T, row.names = 1)
head(card.id.2plus)
card.new.id.key <- read.table('data/shortbred_card/160504_abr_in_2plus_aroontologies_clusters_toplevel_only.txt',
sep = '\t', header = T, row.names = FALSE)
card.new.id.key <- read.table('data/shortbred_card/160504_abr_in_2plus_aroontologies_clusters_toplevel_only.txt',
sep = '\t', header = T)
head(card.new.id.key)
str(card.new.id.key)
str(ger.card.new)
length(unique(rownames(ger.card.new)))
str(card.id.2plus)
card.id.2plus %in% card.new.id.key[,1]
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt', sep = '\t', header = T)
head(card.new.id.key)
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T, row.names = 1)
head(card.new.id.key)
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T)
head(card.new.id.key)
length(unique(card.new.id.key$cluster))
length(unique(card.new.id.key$id))
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T)
card.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
length(card.id.2plus)
card.id.2plus %in% card.new.id.key
card.id.2plus %in% rownames(card.new.id.key)
card.id.2plus %in% card.new.id.key$id
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
ger.card.new[,'Undetermined']
colnames(ger.card.new) %in% sid.key$metaphlan_barcode
colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
dim(ger.card.new)
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
dim(ger.card.new)
ger.card.new.2plus <- as.matrix(ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),])
dim(ger.card.new.2plus)
ger.card.new.2plus[1:5,1:5]
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
# card.new.id.key <- read.table('data/shortbred_card/160503_card_categories.txt',
# card.new.id.key <- read.table('data/shortbred_card/160504_abr_in_2plus_aroontologies_clusters_toplevel_only.txt',
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T)
## list of CARD IDs present in 2+ samples
# card.id.2plus <- readLines('data/shortbred_card/160503_card_abr_in_2plus.txt')
card.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
## remove zero-sum samples (no sequence data)
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
## check if all CARD IDs in cluster key
card.id.2plus %in% card.new.id.key$id
## check if all samples in master sample ID key
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
## remove 'undetermined' sample
# ger.card.new[,'Undetermined'] <- NULL
# colnames(ger.card.new) %in% sid.key$metaphlan_barcode
## replace sample IDs to match 16S data
# colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
## remove duplicate samples
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
str(ger.card.new)
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
# card.new.id.key <- read.table('data/shortbred_card/160503_card_categories.txt',
# card.new.id.key <- read.table('data/shortbred_card/160504_abr_in_2plus_aroontologies_clusters_toplevel_only.txt',
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T)
## list of CARD IDs present in 2+ samples
# card.id.2plus <- readLines('data/shortbred_card/160503_card_abr_in_2plus.txt')
card.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
## remove zero-sum samples (no sequence data)
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
## check if all CARD IDs in cluster key
card.id.2plus %in% card.new.id.key$id
## check if all samples in master sample ID key
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
## remove 'undetermined' sample
# ger.card.new[,'Undetermined'] <- NULL
# colnames(ger.card.new) %in% sid.key$metaphlan_barcode
## replace sample IDs to match 16S data
colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
## remove duplicate samples
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
ger.card.new.2plus <- as.matrix(ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),])
ger.card.new.2plus[1:2,1:2]
ger.card.new.2plus <- t(ger.card.new.2plus)
ger.card.new.2plus[1:2,1:2]
View(ger.ardb.2plus)
ger.card.2plus$SampleID <- rownames(ger.card.2plus)
ger.card.new.2plus$SampleID <- rownames(ger.card.new.2plus)
ger.card.new.2plus <- ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),]
ger.card.new.2plus <- t(ger.card.new.2plus)
ger.card.new.2plus$SampleID <- rownames(ger.card.new.2plus)
ger.card.new.2plus <- as.data.frame(ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),])
ger.card.new.2plus <- t(ger.card.new.2plus)
ger.card.new.2plus$SampleID <- rownames(ger.card.new.2plus)
ger.card.new.2plus <- as.data.frame(ger.card.new[(rownames(ger.card.new) %in% card.id.2plus),])
ger.card.new.2plus <- t(ger.card.new.2plus)
View(ger.card.new.2plus)
View(all.ardb.tp)
ger.card.new <- read.table('data/shortbred_card/160503_abr_CARDv105_merged_labeled.txt',
sep = '\t', header = T, row.names = 1)
colnames(ger.card.new) <- gsub("X_", "_", colnames(ger.card.new))
str(ger.card.new)
card.new.id.key <- read.table('data/shortbred_card/160504_abr_clusters.txt',
sep = '\t', header = T)
card.new.id.2plus <- rownames(ger.card.new)[rowSums(ger.card.new != 0) >= 2]
ger.card.new <- ger.card.new[ , colSums(ger.card.new) > 0]
card.new.id.2plus %in% card.new.id.key$id
colnames(ger.card.new) %in% sid.key$metaphlan_id2
colnames(ger.card.new)[!(colnames(ger.card.new) %in% sid.key$metaphlan_id2)]
colnames(ger.card.new) <- sid.key$uparse_sampleid[match(colnames(ger.card.new), sid.key$metaphlan_id2)]
ger.card.new <- ger.card.new[, colnames(ger.card.new) %in% rownames(ger.meta)]
ger.card.new.2plus <- as.matrix(ger.card.new[(rownames(ger.card.new) %in% card.new.id.2plus),])
str(ger.card.new.2plus)
ger.card.new.2plus <- as.data.frame(ger.card.new[(rownames(ger.card.new) %in% card.new.id.2plus),])
str(ger.card.new.2plus)
ger.card.new.2plus <- as.data.frame(t(ger.card.new[(rownames(ger.card.new) %in% card.new.id.2plus),]))
str(ger.card.new.2plus)
View(ger.card.new.2plus)
ger.card.new.2plus$SampleID <- rownames(ger.card.new.2plus)
ger.card.2plus.lg <- melt(ger.card.2plus, id.vars = 'SampleID')
ger.card.new.2plus.lg <- melt(ger.card.new.2plus, id.vars = 'SampleID')
head(ger.card.new.2plus.lg)
colnames(ger.card.new.2plus.lg) <- c('SampleID', 'CARD_ID', 'RPKM')
ger.card.new.2plus.lg$CARD_cluster <- card.new.id.key$cluster[match(ger.card.new.2plus.lg$CARD_ID, card.new.id.key$id)]
head(ger.card.new.2plus.lg)
gg.card.dot.cluster <- ggplot(ger.card.new.2plus.lg, aes(x = CARD_cluster, y = RPKM, color = SampleID))
gg.card.dot.cluster + geom_jitter(alpha = 0.7, position = position_jitter(width = 0.1),
aes(shape = CARD_cluster)) +
xlab('CARD Cluster') +
scale_x_discrete(limits = ger.card.new.2plus.lg$CARD_cluster) +
scale_shape_manual(values = c(16,15,17,16,15,17,16,15,17,16,15,17,16)) +
theme_bw() +
guides(color = guide_legend(title = 'CARD Cluster'),
shape = guide_legend(title = 'CARD Cluster')) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg.card.dot.cluster + geom_jitter(alpha = 0.7, position = position_jitter(width = 0.1),
aes(shape = CARD_cluster)) +
xlab('CARD Cluster') +
scale_x_discrete(limits = ger.card.new.2plus.lg$CARD_cluster) +
# scale_shape_manual(values = c(16,15,17,16,15,17,16,15,17,16,15,17,16)) +
theme_bw() +
guides(color = guide_legend(title = 'CARD Cluster'),
shape = guide_legend(title = 'CARD Cluster')) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg.card.ger.dot.c <- ggplot(ger.card.new.2plus.lg, aes(x = CARD_cluster, y = RPKM))
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Cluster') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
gg.card.ger.dot.c <- ggplot(ger.card.new.2plus.lg, aes(x = CARD_cluster, y = RPKM))
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Cluster') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 65, hjust = 1))
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
coord_flip() +
theme_bw() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
coord_flip() +
theme_bw()
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 16,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
coord_flip() +
theme_bw()
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 16,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
scale_x_reverse() +
coord_flip() +
theme_bw()
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 16,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
scale_x_discrete(limits = sort(unique(ger.card.new.2plus.lg$CARD_cluster), decreasing = T)) +
coord_flip() +
theme_bw()
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 16,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
# scale_x_discrete(limits = sort(unique(ger.card.new.2plus.lg$CARD_cluster), decreasing = T)) +
coord_flip() +
theme_bw()
gg.card.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 16,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.card.new.2plus.lg))))) +
xlab('Antibiotic Resistance Gene Classification') +
ylab('Gene relative abundance (RPKM)') +
scale_x_discrete(limits = sort(unique(ger.card.new.2plus.lg$CARD_cluster), decreasing = T)) +
coord_flip() +
theme_bw()
ggsave('figures/ger_card_new_dot.png', width = 8, height = 6)
save.image('~/Documents/projects/dust_2015/results/ger_shortbred_abres_plots.RData')
