otu.g.orig <- otu.g
## write new OTU table without contaminants
otu.g <- otu.g.orig[!(rownames(otu.g.orig) %in% cont.exclude),]
## make rarefied OTU count table
## first look at read counts across samples
summary(colSums(otu.g))
## rarefy to the minimum count of 6,452
otu.g.rare <- rrarefy(t(otu.g), 6400)
## transpose original OTU table to put samples in rows, OTUs in columns
otu.g <- t(otu.g)
## check for and remove zero-sum OTUs
zero.otus <- colnames(otu.g)[colSums(otu.g) == 0]
otu.g <- otu.g[, !(colnames(otu.g) %in% zero.otus)]
zero.otus.rare <- colnames(otu.g.rare)[colSums(otu.g.rare) == 0]
otu.g.rare <- otu.g.rare[, !(colnames(otu.g.rare) %in% zero.otus.rare)]
## replace rownames with shortened sample names (take out 'oneuL')
rownames(otu.g) <- ger.map$Description[match(rownames(otu.g), rownames(ger.map))]
rownames(otu.g.rare) <- ger.map$Description[match(rownames(otu.g.rare), rownames(ger.map))]
rownames(ger.map) <- ger.map$Description
## make proportion tables
otu.g.prop <- prop.table(otu.g, margin = 1)
otu.g.rare.prop <- prop.table(otu.g.rare, margin = 1)
## clean up unnecessary variables
rm(zero.otus, zero.otus.rare)
## save R data
# dir.create('results/otu_setup')
save.image('results/otu_setup/ger_otu_setup.RData')
View(ger.map)
load('results/otu_setup/ger_otu_setup.RData')
## heatmap
## write dataframe with shorter taxa names
df.taxa <- data.frame(full = colnames(otu.g.prop),
short = '')
## subset to top 50 taxa
pick <- order(colSums(otu.g.prop), decreasing=TRUE)[1:50]
heatmap(otu.g.prop[, pick], trace = NULL)
####################################
## compute Bray-Curtis and Canberra distances on rarefied data
bc.g <- vegdist(otu.g.rare)
can.g <- vegdist(otu.g.rare, 'canberra')
####################################
## PCoA
pcoa.bc.g <- cmdscale(t(bc.g), eig = TRUE)
pcoa.can.g <- cmdscale(t(can.g), eig = TRUE)
####################################
## plot Bray-Curtis pcoa with ggplot
df.pcoa.bc.g <- as.data.frame(pcoa.bc.g$points)
colnames(df.pcoa.bc.g) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.g$Description <- rownames(df.pcoa.bc.g)
df.pcoa.bc.g.all <- merge(df.pcoa.bc.g, ger.map)
## specify 12 colors for space types
mycol.12 <- c('#A6CEE3', '#1F78B4', '#B2DF8A', '#33A02C', '#FB9A99', '#E31A1C',
'#FDBF6F', '#FF7F00', '#CAB2D6', '#6A3D9A', '#EEEE00', '#B15928')
## set theme_bw
theme_set(theme_bw())
head(df.pcoa.bc.g.all)
gg.pcoa.bc.g + geom_point(df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.g + geom_point(df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g + geom_point(df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4)
gg.pcoa.bc.g + geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g + geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g + geom_point() +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +  scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g + geom_point() +
scale_color_manual(values = mycol.12) +
geom_point(df.pcoa.bc.g.all[])
gg.pcoa.bc.g + geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12) +
)
gg.pcoa.bc.g + geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
gg.pcoa.bc.g + geom_point() +
geom_point(subset(df.pcoa.bc.g.all, CrackAreaNSF == 'NA'), pch = 4)
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
gg.pcoa.bc.g + geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8)) +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4)
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.bc.g + geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8)) +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8)) +
)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,], aes(x = PCoA1, y = PCoA2), color = 'grey80', size = 2, pch = 4) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 4) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 10) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 1.5, pch = 4) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 1.5, pch = 4) +
geom_point(pch = 20) +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 1.5, pch = 4) +
geom_point(pch = 16) +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 1.5, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(2,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 1.5, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8)) +
guides(fill = guide_legend(override.aes = list(colour = NULL)))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_TCSavg.png')
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackAreaNSF == NA,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackAreaNSF == 'NA',],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
View(df.pcoa.bc.g.all)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackAreaNSF == 'NA',],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackAreaNSF == 'NA',],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
# geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
## Set up OTU and map tables for downstream analysis
## 2015-10-27
## Roxana Hickey <roxana.hickey@gmail.com>
setwd('~/Documents/projects/gerlinger/')
library(vegan)
## read in the genus-level OTU table
otu.g <- read.table('data/tax_16S_uparse/count_tables/gerlinger_uparse_merged_taxonomy_summaries/gerlinger_uparse_merged_L6_filtered_2samples.txt',
header = TRUE, sep = '\t', row.names = 1, comment.char = '', skip = 1)
## read in mapping file with metadata
ger.map.orig <- read.table('data/map_files/151028_map_edit_finalchems_crack_plus.txt',
header = TRUE, sep = '\t', row.names = 1, comment.char = '')
ger.map.orig$SampleID <- rownames(ger.map.orig)
## reduce mapping file to oneuL samples
ger.map <- ger.map.orig[grep('oneuL', rownames(ger.map.orig)), ]
## define samples to ignore due to low read count or from another study
sample.ignore <- c('oneuL3031',
colnames(otu.g)[grep('oneuLP', colnames(otu.g))],
colnames(otu.g)[grep('oneuLC', colnames(otu.g))],
colnames(otu.g)[grep('oneuLFT', colnames(otu.g))])
## make reduced OTU table
otu.g <- otu.g[, !(colnames(otu.g) %in% sample.ignore)]
## make reduced mapping table
ger.map <- ger.map[!(rownames(ger.map) %in% sample.ignore),]
## look for obvious contaminants in controls to remove
cont.otu <- as.matrix(otu.g[, grep('controL', colnames(otu.g))])
cont.otu <- cont.otu[rowSums(cont.otu) > 0,] # exclude zero-sum OTUs
sort(rowSums(cont.otu), decreasing = TRUE)[1:10]
## the most abundant taxa by far are mitochondria (13,667 reads across both samples)
## and chloroplasts (13,439 reads), followed by Halomonadaceae (6,754 reads).
## thereafter the read counts are below 2,000, or approximately 10% of each sample;
## control1 has 22,237 reads and control2 has 26,430 reads.
cont.exclude <- names(sort(rowSums(cont.otu), decreasing = TRUE))[1:3] # remove by order
cont.exclude <- rownames(cont.otu)[c(grep('chloroplast', rownames(cont.otu), ignore.case = TRUE),
grep('mitochondria', rownames(cont.otu), ignore.case = TRUE),
grep('halomonadaceae', rownames(cont.otu), ignore.case = TRUE))] # remove by name
## save original OTU table
otu.g.orig <- otu.g
## write new OTU table without contaminants
otu.g <- otu.g.orig[!(rownames(otu.g.orig) %in% cont.exclude),]
## make rarefied OTU count table
## first look at read counts across samples
summary(colSums(otu.g))
## rarefy to the minimum count of 6,452
otu.g.rare <- rrarefy(t(otu.g), 6400)
## transpose original OTU table to put samples in rows, OTUs in columns
otu.g <- t(otu.g)
## check for and remove zero-sum OTUs
zero.otus <- colnames(otu.g)[colSums(otu.g) == 0]
otu.g <- otu.g[, !(colnames(otu.g) %in% zero.otus)]
zero.otus.rare <- colnames(otu.g.rare)[colSums(otu.g.rare) == 0]
otu.g.rare <- otu.g.rare[, !(colnames(otu.g.rare) %in% zero.otus.rare)]
## replace rownames with shortened sample names (take out 'oneuL')
rownames(otu.g) <- ger.map$Description[match(rownames(otu.g), rownames(ger.map))]
rownames(otu.g.rare) <- ger.map$Description[match(rownames(otu.g.rare), rownames(ger.map))]
rownames(ger.map) <- ger.map$Description
## make proportion tables
otu.g.prop <- prop.table(otu.g, margin = 1)
otu.g.rare.prop <- prop.table(otu.g.rare, margin = 1)
## clean up unnecessary variables
rm(zero.otus, zero.otus.rare)
## save R data
# dir.create('results/otu_setup')
save.image('results/otu_setup/ger_otu_setup.RData')
load('results/otu_setup/ger_otu_setup.RData')
## heatmap
## write dataframe with shorter taxa names
df.taxa <- data.frame(full = colnames(otu.g.prop),
short = '')
## subset to top 50 taxa
pick <- order(colSums(otu.g.prop), decreasing=TRUE)[1:50]
heatmap(otu.g.prop[, pick], trace = NULL)
####################################
## compute Bray-Curtis and Canberra distances on rarefied data
bc.g <- vegdist(otu.g.rare)
can.g <- vegdist(otu.g.rare, 'canberra')
####################################
## PCoA
pcoa.bc.g <- cmdscale(t(bc.g), eig = TRUE)
pcoa.can.g <- cmdscale(t(can.g), eig = TRUE)
####################################
## plot Bray-Curtis pcoa with ggplot
df.pcoa.bc.g <- as.data.frame(pcoa.bc.g$points)
colnames(df.pcoa.bc.g) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.g$Description <- rownames(df.pcoa.bc.g)
df.pcoa.bc.g.all <- merge(df.pcoa.bc.g, ger.map)
## specify 12 colors for space types
mycol.12 <- c('#A6CEE3', '#1F78B4', '#B2DF8A', '#33A02C', '#FB9A99', '#E31A1C',
'#FDBF6F', '#FF7F00', '#CAB2D6', '#6A3D9A', '#EEEE00', '#B15928')
## set theme_bw
theme_set(theme_bw())
## all samples by space type
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.g + geom_point(size = 2) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 2, vjust = 0) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_bc_g_sampletype.png')
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(2,8)) +
scale_color_manual(values = mycol.12)
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8)) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_bc_g_crackarea.png')
## crack area NSF
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8)) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_bc_g_crackarea.png')
## chem = TCSavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_TCSavg.png')
## chem = TCCavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCCavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_TCCavg.png')
## chem = MePBavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = MePBavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_MePBavg.png')
## chem = EtPBavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = EtPBavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_EtPBavg.png')
## chem = PrPBavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = PrPBavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_PrPBavg.png')
## chem = BuBPavg
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = BuPBavg))
gg.pcoa.bc.g +
geom_point(data = df.pcoa.bc.g.all[df.pcoa.bc.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_bc_g_BuPBavg.png')
## plot Canberra pcoa with ggplot
df.pcoa.can.g <- as.data.frame(pcoa.can.g$points)
colnames(df.pcoa.can.g) <- c('PCoA1', 'PCoA2')
df.pcoa.can.g$Description <- rownames(df.pcoa.can.g)
df.pcoa.can.g.all <- merge(df.pcoa.can.g, ger.map)
## all samples by space type
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.can.g + geom_point(size = 2) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 2, vjust = 0) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_can_g_sampletype.png')
## plot Canberra pcoa with ggplot
df.pcoa.can.g <- as.data.frame(pcoa.can.g$points)
colnames(df.pcoa.can.g) <- c('PCoA1', 'PCoA2')
df.pcoa.can.g$Description <- rownames(df.pcoa.can.g)
df.pcoa.can.g.all <- merge(df.pcoa.can.g, ger.map)
## all samples by space type
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.can.g + geom_point(size = 2) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 2, vjust = 0) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_can_g_sampletype.png')
## crack area NSF
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8)) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_can_g_crackarea.png')
## chem = TCSavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_TCSavg.png')
## chem = TCCavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCCavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_TCCavg.png')
## chem = MePBavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = MePBavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_MePBavg.png')
## chem = EtPBavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = EtPBavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_EtPBavg.png')
## chem = PrPBavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = PrPBavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_PrPBavg.png')
## chem = BuBPavg
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = BuPBavg))
gg.pcoa.can.g +
geom_point(data = df.pcoa.can.g.all[df.pcoa.can.g.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.12) +
scale_size_continuous(range = c(3,8))
ggsave('figures/pcoa_can_g_BuPBavg.png')
gg.pcoa.can.g <- ggplot(df.pcoa.can.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.can.g + geom_point(size = 3) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 2, vjust = 0) +
scale_color_manual(values = mycol.12)
gg.pcoa.can.g + geom_point(size = 3) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_can_g_sampletype.png')
gg.pcoa.bc.g <- ggplot(df.pcoa.bc.g.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.g + geom_point(size = 3) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.12)
ggsave('figures/pcoa_bc_g_sampletype.png')
