dat <- read.csv("~/Downloads/yatsunenko_table_s2/16SrRNA-Table 1.csv")
head(dat)
dat <- read.csv("~/Downloads/yatsunenko_table_s2/16SrRNA-Table 1.csv", header=T)
head(dat)
length(unique(dat$Sample.Identifier))
hist(dat$Age..Years.)
dat <- read.csv("~/Downloads/yatsunenko_table_s2/16SrRNA-Table 1.csv", header=T)
hist(dat$Age_Years, breaks=20)
hist(dat$Age_Years[dat$Age_Years<10])
hist(dat$Age_Years[dat$Age_Years<10], breaks=20)
hist(dat$Age_Years[dat$Age_Years<10], breaks=20, col="dodgerblue4")
hist(dat$Age_Years[dat$Age_Years<18], breaks=20, col="dodgerblue4")
length(dat$Age_Years[dat$Age_Years<18])
length(dat$Age_Years[dat$Age_Years<1])
length(dat$Age_Years[dat$Age_Years<4])
length(dat$Age_Years[dat$Age_Years<=1])
length(dat$Age_Years[dat$Age_Years>1 & dat$Age_Years<=4])
length(dat$Age_Years[dat$Age_Years>4 & dat$Age_Years<=6])
length(dat$Age_Years[dat$Age_Years>6 & dat$Age_Years<=10])
length(dat$Age_Years[dat$Age_Years>10 & dat$Age_Years<=14])
length(dat$Age_Years[dat$Age_Years>14 & dat$Age_Years<18])
135+96+51+60+98+98
View(dat)
length(dat$Age_Years[dat$Age_Years>1 && dat$Age_Years<=4])
length(dat$Age_Years[dat$Age_Years>1 & <=4])
length(dat$Age_Years[dat$Age_Years >1 & dat$Age_Years <=4])
length(dat$Age_Years[dat$Age_Years < 18])
length(dat$Age_Years[dat$Age_Years <= 1])
length(dat$Age_Years[dat$Age_Years >1 & dat$Age_Years <=4])
length(dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6])
length(dat$Age_Years[dat$Age_Years >6 & dat$Age_Years <=10])
length(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=14])
length(dat$Age_Years[dat$Age_Years >14 & dat$Age_Years <18])
sum(length(dat$Age_Years[dat$Age_Years <= 1]) +
length(dat$Age_Years[dat$Age_Years >1 & dat$Age_Years <=4]) +
length(dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6]) +
length(dat$Age_Years[dat$Age_Years >6 & dat$Age_Years <=10]) +
length(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=14]) +
length(dat$Age_Years[dat$Age_Years >14 & dat$Age_Years <18])
)
length(dat$Age_Years[dat$Age_Years < 18])
length(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=14])
length(dat$Age_Years[dat$Age_Years >14 & dat$Age_Years <18])
length(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=18])
View(dat)
length(na.exclude(dat$Age_Years[dat$Age_Years < 18]))
length(na.exclude(dat$Age_Years[dat$Age_Years <= 1]))
length(
)
na.exclude(dat$Age_Years[dat$Age_Years <= 1])
dat$Age_Years[dat$Age_Years <= 1]
dat$Age_Years[dat$Age_Years >1 & dat$Age_Years <=4]
dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6]
na.exclude(dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6])
length(na.exclude(dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6]))
length(na.exclude(dat$Age_Years[dat$Age_Years < 18]))
length(na.exclude(dat$Age_Years[dat$Age_Years < 18]))
length(na.exclude(dat$Age_Years[dat$Age_Years <= 1]))
length(na.exclude(dat$Age_Years[dat$Age_Years >1 & dat$Age_Years <=4]))
length(na.exclude(dat$Age_Years[dat$Age_Years >4 & dat$Age_Years <=6]))
length(na.exclude(dat$Age_Years[dat$Age_Years >6 & dat$Age_Years <=10]))
length(na.exclude(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=18]))
length(na.exclude(dat$Age_Years[dat$Age_Years >14 & dat$Age_Years <18]))
length(na.exclude(dat$Age_Years[dat$Age_Years >10 & dat$Age_Years <=14]))
96+57+12+21+59+59
dat.sub <- na.exclude(dat$Age_Years)
length(dat.sub)
length(dat.sub[dat$sub < 18])
dat.sub
length(dat.sub[dat.sub < 18])
length(dat.sub[dat.sub <= 1])
length(dat.sub[dat.sub > 1 & dat.sub <=4]) # n=96
length(dat.sub[dat.sub > 4 & dat.sub <= 6]) # n=
length(dat.sub[dat.sub > 6 & dat.sub <= 10]) # n=
length(dat.sub[dat.sub > 10 & dat.sub <= 14]) # n=
length(dat.sub[dat.sub > 14 & dat.sub <= 18]) # n=
dat.sub[dat.sub > 14 & dat.sub <= 18]
length(dat.sub[dat.sub > 14 & dat.sub < 18]) # n=
setwd('~/Documents/projects/gerlinger/')
library(ggplot2)
library(RColorBrewer)
library(vegan)
library(labdsv)
library(plyr)
library(phyloseq)
library(gplots)
load('results/otu_setup/ger_rm_contaminants.RData')
ger.nc.prop <- prop.table(ger.nc, margin = 1)
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:10]
identical(row.names(ger.nc.prop), row.names(ger.map))
mycol <- mycol.9[match(ger.map$SpaceTypeBioBE, names(mycol.9))]
png('figures/ger_heatmap_top10_genus.png', width = 7, height = 6, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.1, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.1, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.25, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.1, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 8, res = 300, units = 'in', pointsize = 12)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.1, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.1, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
xlab = 'Sample')
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 6, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 10, height = 7, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 9, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,pick]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
#           labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labCol = NULL,
labRow = consensus.nc[colnames(ger.nc.prop[,pick])],
# xlab = 'Sample', ylab = 'Taxon')
xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
