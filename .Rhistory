setwd('~/Documents/projects/dust_2015/')
library(ggplot2)
library(RColorBrewer)
library(vegan)
library(labdsv)
library(plyr)
library(phyloseq)
library(gplots)
load('results/otu_setup/ger_rm_contaminants.RData')
ger.nc.prop <- prop.table(ger.nc, margin = 1)
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:25]
identical(row.names(ger.nc.prop), row.names(ger.map))
mycol <- mycol.9[match(ger.map$SpaceTypeBioBE, names(mycol.9))]
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
display.brewer.all()
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'YlGnBu')[-1])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'Spectral'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'YlGnBu')[3:9])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(11, 'Spectral')[-6])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(11, 'Spectral')[c(5,4,3,2,1)])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'YlOrRd'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(11, 'Spectral')[c(5,7,8,9,10,11)])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(11, 'Spectral')[c(7,8,9,10,11)])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'PuRd'))(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'PuRd')[-1])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'RdPu')[-1])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
png('figures/ger_heatmap_top25_genus.png', width = 7, height = 6, res = 300, units = 'in', pointsize = 10)
# png('figures/ger_heatmap_top10_genus.png', width = 12, height = 8, res = 300, units = 'in', pointsize = 14)
par(xpd = TRUE)
heatmap.2(t(ger.nc.prop[,rev(pick)]), trace = 'none',
# col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(6,10),
col = colorRampPalette(brewer.pal(9, 'PuRd')[-1])(100), margin = c(6,10),
ColSideColors = mycol, revC = TRUE,
Rowv = FALSE,
density.info = 'none',
keysize = 0.9, key.title = '', key.xlab = 'Proportion',
breaks = seq(0, 1, 0.01),
labCol = ger.map[row.names(ger.nc.prop), 'Description'],
labRow = consensus.nc[colnames(ger.nc.prop[,rev(pick)])],
cexRow = 0.3 + 1/log10(nrow(ger.nc.prop)),
cexCol = 0.3 + 1/log10(nrow(ger.nc.prop)),
xlab = 'Sample', ylab = 'Taxon')
# xlab = '', ylab = '')
legend(0.9, 1.15, bty = 'n', cex = 0.7, title = 'Space Type',
legend = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom'),
fill = mycol.9, border = 'white')
dev.off()
