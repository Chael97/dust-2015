col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:25]
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
colSums(ger.nc.prop)
pick <- order(colSums(ger.nc), decreasing=TRUE)[1:25]
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
colSums(ger.nc)[order(colSums(ger.nc), decreasing=TRUE)][1:25]
colSums(ger.nc.prop)[order(colSums(ger.nc.prop), decreasing=TRUE)][1:25]
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:25]
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
rowSums(ger.nc.prop)
pick <- order(colSums(ger.nc.prop), decreasing=TRUE)[1:25]
png('figures/ger_heatmap_top25_genus.png', width = 6, height = 6, res = 300, units = 'in', pointsize = 8)
heatmap.2(ger.nc.prop[,pick], scale = 'none', trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
ger.nc.prop[,'Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacteriales;Enterobacteriaceae;']
sort(ger.nc.prop[,'Bacteria;Proteobacteria;Gammaproteobacteria;Enterobacteriales;Enterobacteriaceae;'], decreasing = T)
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = brewer.pal(9, 'YlGnBu'), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = rev(brewer.pal(9, 'YlGnBu')), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
png('figures/ger_heatmap_top25_genus.png', width = 6, height = 6, res = 300, units = 'in', pointsize = 8)
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = rev(colorRampPalette(brewer.pal(9, 'YlGnBu'))(100)), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
png('figures/ger_heatmap_top25_genus.png', width = 6, height = 6, res = 300, units = 'in', pointsize = 8)
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = rev(colorRampPalette(brewer.pal(9, 'YlGnBu'))(100)), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
png('figures/ger_heatmap_top25_genus.png', width = 6, height = 6, res = 300, units = 'in', pointsize = 8)
heatmap.2(ger.nc.prop[,pick], trace = 'none',
col = colorRampPalette(brewer.pal(9, 'YlGnBu'))(100), margin = c(10,10),
keysize = 1, density.info = 'none', key.title = '', key.xlab = 'Proportion',
labRow = ger.map[row.names(ger.nc.prop), 'SpaceType'],
labCol = consensus.nc[colnames(ger.nc.prop[,pick])])
dev.off()
library(ggplot2)
library(reshape)
library(RColorBrewer)
load('results/sourcetracker_out/ger_wood_barberan_genus/results.RData')
res <- results
rm(results)
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
prop.pick <- c('Env', 'TITLE', 'Proportion_Human.Feces', 'Proportion_Human.Mouth', 'Proportion_Human.Skin',
'Proportion_Human.Urine', 'Proportion_Human.Vagina', 'Proportion_Unknown')
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
res.prop$SampleID <- rownames(res.prop)
res.prop.lg <- melt(res.prop, id.vars = c('SampleID', 'Env', 'TITLE'))
res.prop.lg.ger <- subset(res.prop.lg, TITLE == 'Gerlinger')
sample.pick.ger <- rownames(map.out)[grep('oneuL', rownames(map.out))]
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
ord.id <- c(rownames(map.out)[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]],
control.id)
ord.env <- c(as.character(map.out$Env[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]]),
rep('control', 2))
gg.prop.bar <- ggplot(res.prop.lg.ger, aes(x = SampleID, y = value, fill = variable))
gg.prop.bar + geom_bar(stat = 'identity') +
scale_fill_manual(values = c(brewer.pal(11, 'Spectral')[c(11,10,9,8,7)],
'grey90'),
labels = c('Human Feces', 'Human Mouth', 'Human Skin',
'Human Urine', 'Human Vagina', 'Unknown'),
name = 'Putative Source') +
scale_x_discrete(limits = rev(ord.id),
labels = rev(ord.env)) +
xlab('Room Type') +
ylab('Proportion') +
coord_flip() +
theme_bw()
dev.off()
gg.prop.bar + geom_bar(stat = 'identity') +
scale_fill_manual(values = c(brewer.pal(11, 'Spectral')[c(11,10,9,8,7)],
'grey90'),
labels = c('Human Feces', 'Human Mouth', 'Human Skin',
'Human Urine', 'Human Vagina', 'Unknown'),
name = 'Putative Source') +
scale_x_discrete(limits = rev(ord.id),
labels = rev(ord.env)) +
xlab('Room Type') +
ylab('Proportion') +
coord_flip() +
theme_bw()
View(res.prop)
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
View(map.out)
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
prop.pick <- c('Env', 'TITLE', 'Proportion_Human.Feces', 'Proportion_Human.Mouth', 'Proportion_Human.Skin',
'Proportion_Human.Urine', 'Proportion_Human.Vagina', 'Proportion_Unknown')
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
View(res.prop)
View(map.out)
table(map.out$TITLE)
map.out$TITLE[map.out$LAB_PERSON == 'Erica Hartmann']
map.out$TITLE[map.out$LAB_PERSON == 'Erica Hartmann'] <- 'Gerlinger'
map.out$TITLE[map.out$LAB_PERSON == 'Erica Hartmann'] <- c('Gerlinger')
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
prop.pick <- c('Env', 'TITLE', 'Proportion_Human.Feces', 'Proportion_Human.Mouth', 'Proportion_Human.Skin',
'Proportion_Human.Urine', 'Proportion_Human.Vagina', 'Proportion_Unknown')
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
View(res.prop)
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
View(map.out)
map.out$TITLE[map.out$LAB_PERSON == 'Erica Hartmann']
prop.pick <- c('Env', 'TITLE', 'Proportion_Human.Feces', 'Proportion_Human.Mouth', 'Proportion_Human.Skin',
'Proportion_Human.Urine', 'Proportion_Human.Vagina', 'Proportion_Unknown')
prop.pick %in% colnames(map.out)
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
View(res.prop)
View(map.out)
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
res.prop <- map.out[, prop.pick]
res.prop <- map.out[, prop.pick]
View(res.prop)
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
View(res.prop)
res.prop <- map.out[map.out$SourceSink == 'sink', prop.pick]
View(res.prop)
map.out$SourceSink == 'sink'
which(map.out$SourceSink == 'sink')
res.prop <- map.out[which(map.out$SourceSink == 'sink'), prop.pick]
View(res.prop)
o
res.prop$SampleID <- rownames(res.prop)
res.prop.lg <- melt(res.prop, id.vars = c('SampleID', 'Env', 'TITLE'))
res.prop.lg.ger <- subset(res.prop.lg, TITLE == 'Gerlinger')
sample.pick.ger <- rownames(map.out)[grep('oneuL', rownames(map.out))]
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
ord.id <- c(rownames(map.out)[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]],
control.id)
ord.env <- c(as.character(map.out$Env[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]]),
rep('control', 2))
gg.prop.bar <- ggplot(res.prop.lg.ger, aes(x = SampleID, y = value, fill = variable))
gg.prop.bar + geom_bar(stat = 'identity') +
scale_fill_manual(values = c(brewer.pal(11, 'Spectral')[c(11,10,9,8,7)],
'grey90'),
labels = c('Human Feces', 'Human Mouth', 'Human Skin',
'Human Urine', 'Human Vagina', 'Unknown'),
name = 'Putative Source') +
scale_x_discrete(limits = rev(ord.id),
labels = rev(ord.env)) +
xlab('Room Type') +
ylab('Proportion') +
coord_flip() +
theme_bw()
ggsave('figures/ger_sourcetracker_genus_fulldata.png', width = 8, height = 10)
res.prop.2 <- res.prop
res.prop.2$Proportion_Human <- rowSums(res.prop.2[ , c('Proportion_Human.Feces',
'Proportion_Human.Mouth',
'Proportion_Human.Skin',
'Proportion_Human.Urine',
'Proportion_Human.Vagina')])
res.prop.2 <- res.prop.2[ , c('Env', 'TITLE', 'SampleID',
'Proportion_Human', 'Proportion_Unknown')]
gg.prop.2.hist <- ggplot(res.prop.2, aes(x = Proportion_Human, fill = TITLE))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
scale_fill_manual(values = c('darkgoldenrod4', 'yellow2', 'cadetblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
View(res.prop.2)
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('darkgoldenrod4', 'yellow2', 'cadetblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
#   scale_fill_manual(values = c('darkgoldenrod4', 'yellow2', 'cadetblue2'),
#                     limits = c('Gerlinger',
#                                'Athletic equipment microbiota are shaped by interactions with human skin',
#                                'The ecology of microscopic life in household dust'),
#                     labels = c('Gerlinger',
#                                'Athletic Facilities',
#                                'Homes'),
#                     name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('darkgoldenrod4', 'yellow2', 'dodgerblue4'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust '),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('darkgoldenrod4', 'yellow2', 'dodgerblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust '),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('magenta', 'yellow2', 'dodgerblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust '),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
ggsave('figures/ger_wood_barberan_sourcetracker_genus_density_fulldata.png', width = 6, height = 6)
map.out <- read.table('results/sourcetracker_out/ger_wood_barberan_genus/map.txt',
header = T, sep = '\t', row.names = 1, comment.char = '')
## note control samples
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
## reduce maps to source/sink proportions
prop.pick <- c('Env', 'TITLE', 'Proportion_Human.Feces', 'Proportion_Human.Mouth', 'Proportion_Human.Skin',
'Proportion_Human.Urine', 'Proportion_Human.Vagina', 'Proportion_Unknown')
res.prop <- map.out[which(map.out$SourceSink == 'sink'), prop.pick]
res.prop$SampleID <- rownames(res.prop)
## melt dataframe for barplots
res.prop.lg <- melt(res.prop, id.vars = c('SampleID', 'Env', 'TITLE'))
## narrow selection to Gerlinger only
res.prop.lg.ger <- subset(res.prop.lg, TITLE == 'Gerlinger')
sample.pick.ger <- rownames(map.out)[grep('oneuL', rownames(map.out))]
## note control samples
control.id <- rownames(map.out)[grep('oneuLcontroL', rownames(map.out))]
## set sample order for plots
ord.id <- c(rownames(map.out)[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]],
control.id)
ord.env <- c(as.character(map.out$Env[order(map.out$Env)][rownames(map.out)[order(map.out$Env)] %in% sample.pick.ger[!(sample.pick.ger %in% control.id)]]),
rep('control', 2))
## bar plot of Gerlinger-only sourcetracker results
gg.prop.bar <- ggplot(res.prop.lg.ger, aes(x = SampleID, y = value, fill = variable))
gg.prop.bar + geom_bar(stat = 'identity') +
scale_fill_manual(values = c(brewer.pal(11, 'Spectral')[c(11,10,9,8,7)],
'grey90'),
labels = c('Human Feces', 'Human Mouth', 'Human Skin',
'Human Urine', 'Human Vagina', 'Unknown'),
name = 'Putative Source') +
scale_x_discrete(limits = rev(ord.id),
labels = rev(ord.env)) +
xlab('Room Type') +
ylab('Proportion') +
coord_flip() +
theme_bw()
ggsave('figures/ger_sourcetracker_genus_fulldata.png', width = 8, height = 10)
# ggsave('figures/ger_sourcetracker_genus.png', width = 8, height = 10)
## summarize all human together
res.prop.2 <- res.prop
res.prop.2$Proportion_Human <- rowSums(res.prop.2[ , c('Proportion_Human.Feces',
'Proportion_Human.Mouth',
'Proportion_Human.Skin',
'Proportion_Human.Urine',
'Proportion_Human.Vagina')])
res.prop.2 <- res.prop.2[ , c('Env', 'TITLE', 'SampleID',
'Proportion_Human', 'Proportion_Unknown')]
gg.prop.2.hist <- ggplot(res.prop.2, aes(x = Proportion_Human, fill = TITLE))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('magenta', 'yellow2', 'dodgerblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
ggsave('figures/ger_wood_barberan_sourcetracker_genus_density_fulldata.png', width = 6, height = 6)
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('magenta', 'yellow2', 'cadetblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
gg.prop.2.hist + geom_density(alpha = 0.6, adjust = 0.75) +
# geom_line(stat = 'density', adjust = 0.75) +
scale_fill_manual(values = c('magenta4', 'yellow2', 'cadetblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
xlim(c(0,1)) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
ggsave('figures/ger_wood_barberan_sourcetracker_genus_density_fulldata.png', width = 6, height = 6)
gg.prop.2.vio <- ggplot(res.prop.2, aes(x = TITLE, y = Proportion_Human, fill = TITLE))
gg.prop.2.vio + geom_violin(adjust = 0.75) +
geom_boxplot(width = 0.1, fill = 'black', outlier.color = NA) +
stat_summary(fun.y = median, geom = 'point', fill = 'white', shape = 21, size = 2.5) +
scale_fill_manual(values = c('magenta4', 'yellow2', 'cadetblue2'),
limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes'),
name = 'Study') +
scale_x_discrete(limits = c('Gerlinger',
'Athletic equipment microbiota are shaped by interactions with human skin',
'The ecology of microscopic life in household dust'),
labels = c('Gerlinger',
'Athletic Facilities',
'Homes')) +
xlab('Proportion of putative human-sourced bacteria') +
ylab('Frequency') +
guides(fill = guide_legend(override.aes = list(colour = NULL))) +
theme_bw() +
theme(legend.key = element_rect(colour = 'black'), legend.background = element_blank(),
legend.position = c(1,1), legend.justification = c(1,1))
ggsave('figures/ger_wood_barberan_sourcetracker_genus_violin_fulldata.png', width = 6, height = 6)
install.packages('tsne')
library(tsne)
tsne.bc.nc <- tsne(t(bc.nc))
load('results/otu_setup/ger_rm_contaminants.RData')
tsne.bc.nc <- tsne(t(bc.nc))
plot(tsne.bc$points, type = 'n')
plot(tsne.bc.nc$points, type = 'n')
str(tsne.bc.nc)
plot(tsne.bc.nc, type = 'n')
points(tsne.bc[control, ], pch = 17, col = ger.map$bg[control])
points(tsne.bc.nc[control, ], pch = 17, col = ger.map$bg[control])
points(tsne.bc.nc[samples, ], pch = 16, col = ger.map$bg[samples])
tsne.bc.nc <- tsne(bc.nc)
plot(tsne.bc.nc, type = 'n')
points(tsne.bc.nc[control, ], pch = 17, col = ger.map$bg[control])
points(tsne.bc.nc[samples, ], pch = 16, col = ger.map$bg[samples])
pcoa.bc.nc <- cmdscale(bc.nc, eig = TRUE)
data("varespec")
str(varespec)
head(varespec)
rowSums(varespec)
colSums(varespec)
ger.nc.6500[1:5,1:5]
plot(nmds.bc.nc$points, type = 'n')
points(nmds.bc.nc$points[control, ], pch = 17, col = ger.map$bg[control])
points(nmds.bc.nc$points[samples, ], pch = 16, col = ger.map$bg[samples])
plot(nmds.bc$points, type = 'n')
points(nmds.bc$points[control, ], pch = 17, col = ger.map$bg[control])
points(nmds.bc$points[samples, ], pch = 16, col = ger.map$bg[samples])
plot(bc.nc, bc)
pcoa.bc.nc <- cmdscale(bc.nc, eig = TRUE)
pcoa.bc <- cmdscale(bc, eig = TRUE)
plot(pcoa.bc.nc$points, type = 'n')
points(pcoa.bc.nc$points[control, ], pch = 17, col = ger.map$bg[control])
points(pcoa.bc.nc$points[samples, ], pch = 16, col = ger.map$bg[samples])
plot(pcoa.bc$points, type = 'n')
points(pcoa.bc$points[control, ], pch = 17, col = ger.map$bg[control])
points(pcoa.bc$points[samples, ], pch = 16, col = ger.map$bg[samples])
plot(pcoa.bc.nc$points, type = 'n')
points(pcoa.bc.nc$points[control, ], pch = 17, col = ger.map$bg[control])
points(pcoa.bc.nc$points[samples, ], pch = 16, col = ger.map$bg[samples])
pcoa.bc.nc <- cmdscale(bc.nc, eig = TRUE)
pcoa.bc <- cmdscale(bc, eig = TRUE)
plot(pcoa.bc.nc$points, type = 'n')
points(pcoa.bc.nc$points[control, ], pch = 17, col = ger.map$bg[control])
points(pcoa.bc.nc$points[samples, ], pch = 16, col = ger.map$bg[samples])
plot(pcoa.bc$points, type = 'n')
points(pcoa.bc$points[control, ], pch = 17, col = ger.map$bg[control])
points(pcoa.bc$points[samples, ], pch = 16, col = ger.map$bg[samples])
tsne.bc.nc <- tsne(bc.nc)
plot(tsne.bc.nc, type = 'n')
points(tsne.bc.nc[control, ], pch = 17, col = ger.map$bg[control])
points(tsne.bc.nc[samples, ], pch = 16, col = ger.map$bg[samples])
tsne.bc.nc <- tsne(bc.nc)
plot(tsne.bc.nc, type = 'n')
points(tsne.bc.nc[control, ], pch = 17, col = ger.map$bg[control])
points(tsne.bc.nc[samples, ], pch = 16, col = ger.map$bg[samples])
adonis(bc.nc ~ ger.map$SpaceTypeBioBE)
adonis(bc ~ ger.map$SpaceTypeBioBE)
