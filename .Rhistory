gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.can.nc + geom_point(size = 3) +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_sampletype.png', width = 8, height = 6.5, units = 'in')
df.nmds.can.nc <- as.data.frame(nmds.can.nc$points)
colnames(df.nmds.can.nc) <- c('NMDS1', 'NMDS2')
df.nmds.can.nc$SampleID <- rownames(df.nmds.can.nc)
df.nmds.can.nc.all <- merge(df.nmds.can.nc, ger.map)
gg.nmds.can.nc <- ggplot(df.nmds.can.nc.all, aes(x = NMDS1, y = NMDS2, color = SpaceTypeBioBE))
gg.nmds.can.nc + geom_point(size = 3) +
# ggtitle('NMDS on Canberra') +
# geom_text(aes(y = NMDS2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/nmds_can_g_sampletype.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8), name = 'Crack Area') +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_crackarea.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Triclosan') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_TCSavg.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCCavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Triclocarban') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_TCCavg.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = MePBavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Methylparaben') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_MePBavg.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = EtPBavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Ethylparaben') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_EtPBavg.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = PrPBavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Propylparaben') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_PrPBavg.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.can.nc <- ggplot(df.pcoa.can.nc.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = BuPBavg))
gg.pcoa.can.nc +
geom_point(data = df.pcoa.can.nc.all[df.pcoa.can.nc.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Butylparaben') +
xlab(paste0('PCoA 1 (', r2.pcoa.can.nc.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.can.nc.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_can_g_BuPBavg.png', width = 8, height = 6.5, units = 'in')
setwd('~/Documents/projects/dust_2015/')
library(ggplot2)
library(reshape)
library(RColorBrewer)
library(MASS)
library(scales)
hut.ardb <- read.table('data/shortbred_ardb/ARDB_Data_comparison.txt',
sep = '\t', header = T, row.names = 1)
hut.cat <- read.table('data/shortbred_ardb/categories_metadata_v2_151130.txt',
sep = '\t', header = 1, row.names = NULL)
ger.ardb <- read.table('data/shortbred_ardb/151203_ger_shortbred_merged_ardb_barcode_sampleid.txt',
sep = '\t', header = T, row.names = 1)
ger.ardb <- ger.ardb[,colSums(ger.ardb) > 0]
colnames(ger.ardb) %in% sid.key$metaphlan_barcode
load('results/otu_setup/ger_rm_contaminants_meta.RData')
hut.ardb <- read.table('data/shortbred_ardb/ARDB_Data_comparison.txt',
sep = '\t', header = T, row.names = 1)
hut.cat <- read.table('data/shortbred_ardb/categories_metadata_v2_151130.txt',
sep = '\t', header = 1, row.names = NULL)
ger.ardb <- read.table('data/shortbred_ardb/151203_ger_shortbred_merged_ardb_barcode_sampleid.txt',
sep = '\t', header = T, row.names = 1)
ger.ardb <- ger.ardb[,colSums(ger.ardb) > 0]
colnames(ger.ardb) %in% sid.key$metaphlan_barcode
colnames(ger.ardb)[!(colnames(ger.ardb) %in% sid.key$metaphlan_barcode)]
ger.ardb[,'Undetermined'] <- NULL
colnames(ger.ardb) %in% sid.key$metaphlan_barcode
colnames(ger.ardb) <- sid.key$uparse_sampleid[match(colnames(ger.ardb), sid.key$metaphlan_barcode)]
ger.ardb <- ger.ardb[, colnames(ger.ardb) %in% rownames(ger.meta)]
ardb.fam.id <- as.data.frame(read.table('data/shortbred_ardb/ARDB_family_descriptions.txt',
header = T, sep = '\t'))
ger.cat <- data.frame('SampleID' = colnames(ger.ardb),
'SampleType' = rep('Indoor', length(colnames(ger.ardb))),
'Env' = rep('Mixed_Use', length(colnames(ger.ardb))))
identical(rownames(ger.ardb), rownames(hut.ardb)) # TRUE
all.ardb <- cbind(ger.ardb, hut.ardb)
all.cat <- rbind(ger.cat, hut.cat)
colnames(all.ardb) %in% all.cat$SampleID
all.ardb.sum <- colSums(all.ardb)
all.cat$AbRes_RPKM <- all.ardb.sum[match(names(all.ardb.sum), all.cat$SampleID)]
theme_set(theme_bw(base_size = 16))
gg.ardb.vio <- ggplot(all.cat, aes(x = Env, y = AbRes_RPKM, color = Env, fill = Env))
gg.ardb.vio + geom_violin(adjust = 0.75, alpha = 0.3) +
geom_boxplot(width = 0.1, aes(fill = Env), color = 'black', outlier.color = NA) +
stat_summary(fun.y = median, geom = 'point', fill = 'white', shape = 21, size = 2.5) +
scale_color_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Mixed_Use',
'Built_Environment',
'Human')) +
scale_fill_manual(values = c('darkmagenta', '#0049FF', '#00A4DE'),
limits = c('Mixed_Use',
'Built_Environment',
'Human')) +
scale_x_discrete(limits = c('Mixed_Use',
'Built_Environment',
'Human'),
labels = c('Present Study',
'Other Built\nEnvironment Studies',
'Human Microbiome\nStudies')) +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
ylab('Total antibiotic resistance gene families (RPKM)') +
theme(legend.position = 'none', axis.title.x = element_blank())
ggsave('figures/ger_mbta_hmp_ardb_violin_log.png', width = 8, height = 8)
table(all.cat$Env)
all.ardb.tp <- as.data.frame(t(all.ardb))
all.ardb.tp$SampleID <- rownames(all.ardb.tp)
all.ardb.tp$Env <- factor(all.cat$Env[match(all.cat$SampleID, all.ardb.tp$SampleID)],
levels = c('Human', 'Built_Environment', 'Mixed_Use'))
all.ardb.lg <- melt(all.ardb.tp, id.vars = c('SampleID', 'Env'))
colnames(all.ardb.lg) <- c('SampleID', 'Env', 'AbResFam', 'RPKM')
gg.ardb.dot <- ggplot(all.ardb.lg, aes(x = AbResFam, y = RPKM, color = Env,
alpha = Env, shape = Env))
gg.ardb.dot + geom_point(position = 'jitter', aes(order = rev(seq(1, nrow(all.ardb.lg))))) +
scale_color_manual(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c('darkmagenta', '#0049FF', '#00A4DE')) +
scale_shape_manual(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
values = c(17, 2, 1)) +
scale_alpha_discrete(name = 'Study',
limits = c('Mixed_Use', 'Built_Environment', 'Human'),
labels = c('Present Study',
'Other Built Environments',
'Human Microbiome'),
range = rev(c(0.1, 1))) +
xlab('Antibiotic Resistance Gene Families') +
scale_y_log10(breaks = trans_breaks('log10', function(x) 10^x),
labels = trans_format('log10', math_format(10^.x))) +
theme_bw() +
theme(panel.grid.major.x = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
legend.position = 'bottom')
ggsave('figures/ger_mbta_hmp_ardb_dot_log.png', width = 8, height = 6)
ger.ardb.1plus <- as.data.frame(t(ger.ardb[rowSums(ger.ardb) > 0,]))
ger.ardb.2plus  <- ger.ardb.1plus[,colSums(ger.ardb.1plus != 0) >= 2]
ger.ardb.2plus$SampleID <- rownames(ger.ardb.2plus)
ger.ardb.2plus.lg <- melt(ger.ardb.2plus, id.vars = 'SampleID')
colnames(ger.ardb.2plus.lg) <- c('SampleID', 'AbResFam', 'RPKM')
ger.ardb.2plus.lg$AbResFamClass <- ardb.fam.id$Class[match(ger.ardb.2plus.lg$AbResFam, ardb.fam.id$Family)]
ger.ardb.2plus.lg$AbResFamClass2 <- paste0(ger.ardb.2plus.lg$AbResFamClass, ' (', ger.ardb.2plus.lg$AbResFam, ')')
ardb.fam.id.2plus <- ardb.fam.id[ardb.fam.id$Family %in% ger.ardb.2plus.lg$AbResFam,]
gg.ardb.ger.dot.f <- ggplot(ger.ardb.2plus.lg, aes(x = AbResFam, y = RPKM, color = AbResFamClass))
gg.ardb.ger.dot.f + geom_jitter(alpha = 0.7, position = position_jitter(width = 0.1),
aes(shape = AbResFamClass)) +
xlab('ARDB Gene Family') +
scale_x_discrete(limits = ardb.fam.id.2plus$Family[order(ardb.fam.id.2plus$Class)]) +
scale_shape_manual(values = c(16,15,17,16,15,17,16,15,17,16,15,17,16)) +
theme_bw() +
guides(color = guide_legend(title = 'ARDB Gene Class'),
shape = guide_legend(title = 'ARDB Gene Class')) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave('figures/ger_ardb_dot_family.png', width = 12, height = 7)
gg.ardb.ger.dot.c <- ggplot(ger.ardb.2plus.lg, aes(x = AbResFamClass, y = RPKM))
gg.ardb.ger.dot.c + geom_jitter(alpha = 0.5, color = 'darkmagenta', shape = 17,
position = position_jitter(width = 0.2),
aes(order = rev(seq(1, nrow(ger.ardb.2plus.lg))))) +
xlab('ARDB Gene Class') +
ylab('Gene relative abundance (RPKM)') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave('figures/ger_ardb_dot_class.png', width = 8, height = 6)
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Mixed_Use'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Built_Environment'])
summary(all.cat$AbRes_RPKM[all.cat$Env == 'Human'])
ger.card <- read.table('data/shortbred_card/151207_ger_shortbred_merged_card_barcode_sampleid.txt',
sep = '\t', header = T, row.names = 1)
ger.card <- ger.card[ , colSums(ger.card) > 0]
colnames(ger.card) %in% sid.key$metaphlan_barcode
colnames(ger.card)[!(colnames(ger.card) %in% sid.key$metaphlan_barcode)]
ger.card[,'Undetermined'] <- NULL
colnames(ger.card) %in% sid.key$metaphlan_barcode
colnames(ger.card) <- sid.key$uparse_sampleid[match(colnames(ger.card), sid.key$metaphlan_barcode)]
ger.card <- ger.card[, colnames(ger.card) %in% rownames(ger.meta)]
save.image('~/Documents/projects/dust_2015/results/ger_shortbred_abres_plots.RData')
setwd('~/Documents/projects/dust_2015/')
library(ggplot2)
library(RColorBrewer)
library(vegan)
library(labdsv)
library(plyr)
library(phyloseq)
library(gplots)
## load previously processed metagenomic data
load('results/otu_setup/ger_rm_contaminants_meta.RData')
load('~/Documents/projects/dust_2015/results/ger_shortbred_abres_plots.RData')
bc.ardb <- vegdist(t(ger.ardb))
pcoa.bc.ardb <- cmdscale(bc.ardb, eig = TRUE)
plot(pcoa.bc.ardb$points, type = 'p')
df.pcoa.bc.ardb <- as.data.frame(pcoa.bc.ardb$points)
colnames(df.pcoa.bc.ardb) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.ardb$SampleID <- rownames(df.pcoa.bc.ardb)
df.pcoa.bc.ardb.all <- merge(df.pcoa.bc.ardb, ger.meta.map)
theme_set(theme_bw(base_size = 14))
eigenvals(pcoa.bc.ardb)/sum(eigenvals(pcoa.bc.ardb))
r2.pcoa.bc.ardb.1 <- eigenvals(pcoa.bc.ardb)[1]/sum(eigenvals(pcoa.bc.ardb))
r2.pcoa.bc.ardb.2 <- eigenvals(pcoa.bc.ardb)[2]/sum(eigenvals(pcoa.bc.ardb))
theme_set(theme_bw(base_size = 14))
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.ardb + geom_point(size = 3) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.bc.ardb.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.bc.ardb.2, '%)')) +
theme(panel.grid.minor = element_blank())
r2.pcoa.bc.ardb.1 <- round(eigenvals(pcoa.bc.ardb)[1]/sum(eigenvals(pcoa.bc.ardb)) * 100, 1)
r2.pcoa.bc.ardb.2 <- round(eigenvals(pcoa.bc.ardb)[2]/sum(eigenvals(pcoa.bc.ardb)) * 100, 1)
gg.pcoa.bc.ardb + geom_point(size = 3) +
# ggtitle('PCoA on Bray-Curtis') +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.bc.ardb.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.bc.ardb.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_bc_ardb_sampletype.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = CrackAreaNSF))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$CrackNSFAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1, na.rm = FALSE) +
geom_point() +
scale_size_continuous(range = c(3,8), name = 'Crack Area') +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.bc.ardb.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.bc.ardb.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_bc_ardb_crackarea.png', width = 8, height = 6.5, units = 'in')
gg.pcoa.bc.ardb <- ggplot(df.pcoa.bc.ardb.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE, size = TCSavg))
gg.pcoa.bc.ardb +
geom_point(data = df.pcoa.bc.ardb.all[df.pcoa.bc.ardb.all$ChemAvail == FALSE,],
aes(x = PCoA1, y = PCoA2),
size = 2, pch = 1) +
geom_point() +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
scale_size_continuous(range = c(3,8), name = 'Triclosan') +
xlab(paste0('PCoA 1 (', r2.pcoa.bc.ardb.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.bc.ardb.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_bc_ardb_TCSavg.png', width = 8, height = 6.5, units = 'in')
bc.card <- vegdist(t(ger.card))
pcoa.bc.card <- cmdscale(bc.card, eig = TRUE)
plot(pcoa.bc.card$points, type = 'p')
eigenvals(pcoa.bc.card)/sum(eigenvals(pcoa.bc.card))
r2.pcoa.bc.card.1 <- round(eigenvals(pcoa.bc.card)[1]/sum(eigenvals(pcoa.bc.card)) * 100, 1)
r2.pcoa.bc.card.2 <- round(eigenvals(pcoa.bc.card)[2]/sum(eigenvals(pcoa.bc.card)) * 100, 1)
df.pcoa.bc.card <- as.data.frame(pcoa.bc.card$points)
colnames(df.pcoa.bc.card) <- c('PCoA1', 'PCoA2')
df.pcoa.bc.card$SampleID <- rownames(df.pcoa.bc.card)
df.pcoa.bc.card.all <- merge(df.pcoa.bc.card, ger.meta.map)
gg.pcoa.bc.card <- ggplot(df.pcoa.bc.card.all, aes(x = PCoA1, y = PCoA2, color = SpaceTypeBioBE))
gg.pcoa.bc.card + geom_point(size = 3) +
geom_text(aes(y = PCoA2 + 0.01, label = Description), size = 3, vjust = 0) +
scale_color_manual(values = mycol.9, name = 'Space Type',
breaks = c('building.support', 'circulation', 'classroom', 'gym', 'laundry',
'lockers', 'office', 'pool', 'restroom')) +
xlab(paste0('PCoA 1 (', r2.pcoa.bc.ardb.1, '%)')) +
ylab(paste0('PCoA 2 (', r2.pcoa.bc.ardb.2, '%)')) +
theme(panel.grid.minor = element_blank())
ggsave('figures/pcoa_bc_card_sampletype.png', width = 8, height = 6.5, units = 'in')
save.image('results/ger_abres_extra_plots.RData')
library(vegan)
setwd('~/Documents/projects/dust_2015/')
load('results/otu_setup/ger_rm_contaminants.RData')
load('results/ger_abres_extra_plots.RData')
setwd('~/Documents/projects/dust_2015/')
load('results/otu_setup/ger_rm_contaminants.RData')
load('results/ger_abres_extra_plots.RData')
library(vegan)
library(ggplot2)
ger.chem <- na.exclude(ger.map[,c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')])
ger.nc.rare.mc <- ger.nc.rare[rownames(ger.nc.rare) %in% rownames(ger.chem),] # n = 22
identical(rownames(ger.nc.rare.mc), rownames(ger.chem))
bc.nc.mc <- vegdist(ger.nc.rare.mc)
can.nc.mc <- vegdist(ger.nc.rare.mc, method = 'canberra')
par(mfrow = c(1,2))
hist(bc.nc.mc, breaks = 10, main = 'Bray-Curtis(taxonomy)',
xlab = 'Pairwise Bray-Curtis dissimilarity', col = mycol.9[9]) ## somewhat bimodal
hist(can.nc.mc, breaks = 10, main = 'Canberra(taxonomy)',
xlab = 'Pairwise Canberra dissimilarity', col = mycol.9[9]) ## roughly normal
euc.chem <- dist(ger.chem)
hist(euc.chem, breaks = 10, main = 'dist(chemical profile)',
xlab = 'Pairwise Euclidean distance', col = mycol.9[9]) ## weighted toward low dist
euc.chem.log <- log(dist(ger.chem)) ## transform dist(raw [chem])
hist(euc.chem.log, breaks = 10, main = 'log[dist(chemical profile)]',
xlab = 'log(pairwise Euclidean distance)', col = mycol.9[9]) ## roughly normal
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
hist(log(dist(ger.chem[,i])), breaks = 10, col = mycol.9[9],
main = paste0('log[dist(', i, ')]'),
xlab = paste0('log Euclidean distance'))} ## mostly normal
par(mfrow = c(1,1))
plot(can.nc.mc ~ euc.chem.log, col = mycol.9[9],
ylab = 'Canberra dissimilarity of taxonomy profiles',
xlab = 'log Euclidean distance of chemical profiles')
gg.dat <- na.omit(data.frame('dist.1' = c(can.nc.mc), 'dist.2' = c(euc.chem.log)))
my.color <- mycol.9[9]
ggplot(gg.dat, aes(x = dist.2, y = dist.1)) +
geom_point(colour = my.color, alpha = 0.8, size = 2) +
stat_smooth(colour = my.color, linetype = 2, method = "lm", formula = y ~ poly(x, 1), fill = my.color, level = .95) + ## fit a 2nd order polynomial. you can change the '2' value in poly() to fit different functions (e.g., 1 for a line)
guides(colour = FALSE, fill = FALSE) +
xlab('Chemical profile distance') +
ylab('Community distance (Canberra)') +
theme_bw() +
theme(panel.grid.minor = element_blank())
theme_set(theme_bw(base_size = 16))
ggplot(gg.dat, aes(x = dist.2, y = dist.1)) +
geom_point(colour = my.color, alpha = 0.8, size = 2) +
stat_smooth(colour = my.color, linetype = 2, method = "lm", formula = y ~ poly(x, 1), fill = my.color, level = .95) + ## fit a 2nd order polynomial. you can change the '2' value in poly() to fit different functions (e.g., 1 for a line)
guides(colour = FALSE, fill = FALSE) +
xlab('Chemical profile distance') +
ylab('Community distance (Canberra)') +
theme(panel.grid.minor = element_blank())
ggsave('figures/mantel_tax_chem.png', width = 6, height = 6, units = 'in')
ggsave('figures/mantel_tax_chem.png', width = 8, height = 8, units = 'in')
ggplot(gg.dat, aes(x = dist.2, y = dist.1)) +
geom_point(colour = my.color, alpha = 0.8, size = 2) +
stat_smooth(colour = my.color, linetype = 2, method = "lm", formula = y ~ poly(x, 1), fill = my.color, level = .95) + ## fit a 2nd order polynomial. you can change the '2' value in poly() to fit different functions (e.g., 1 for a line)
guides(colour = FALSE, fill = FALSE) +
xlab('Chemical profile distance (Euclidean)') +
ylab('Community distance (Canberra)') +
#   geom_text(data = NULL, x = 8.25, y = 0.58, label = "r = 0.2039\np < 0.09",
#             size = 8) +
theme(panel.grid.minor = element_blank())
ggsave('figures/mantel_tax_chem.png', width = 8, height = 8, units = 'in')
mantel(can.nc.mc, euc.chem.log) ## r = 0.2039, p = 0.086
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- log(dist(ger.chem[,i]))
plot(can.nc.mc ~ ger.dist.tmp, main = i, col = mycol.9[9],
ylab = 'Canberra dissimilarity of taxonomy profiles',
xlab = paste0('log Euclidean distance of [chemical]'))}
mantel(can.nc.mc, log(dist(ger.chem[,'TCSavg']) + 0.0001)) ## ns
mantel(can.nc.mc, log(dist(ger.chem[,'TCCavg']) + 0.0001)) ## r = 0.2389, p usually > 0.05
mantel(can.nc.mc, log(dist(ger.chem[,'MePBavg']) + 0.0001)) ## ns
mantel(can.nc.mc, log(dist(ger.chem[,'EtPBavg']) + 0.0001)) ## ns
mantel(can.nc.mc, log(dist(ger.chem[,'PrPBavg']) + 0.0001)) ## ns
mantel(can.nc.mc, log(dist(ger.chem[,'BuPBavg']) + 0.0001)) ## ns
adonis(can.nc.mc ~ log(ger.chem$TCSavg)) ## R2 = 0.07157, p = 0.022 *
adonis(can.nc.mc ~ log(ger.chem$TCCavg)) ## R2 = 0.0594, p = 0.118 (ns)
adonis(can.nc.mc ~ log(ger.chem$EtPBavg)) ## R2 = 0.06908, p = 0.021 *
adonis(can.nc.mc ~ log(ger.chem$MePBavg)) ## R2 = 0.07697, p = 0.007 **
adonis(can.nc.mc ~ log(ger.chem$PrPBavg)) ## R2 = 0.08092, p = 0.004 **
adonis(can.nc.mc ~ log(ger.chem$BuPBavg)) ## R2 = 0.07886, p = 0.008 **
adonis(bc.nc.mc ~ log(ger.chem$TCSavg)) ## R2 = 0.07307, p = 0.106 (ns)
adonis(bc.nc.mc ~ log(ger.chem$TCCavg)) ## R2 = 0.09499,  p = 0.052 . (marginally signif)
adonis(bc.nc.mc ~ log(ger.chem$EtPBavg)) ## R2 = 0.06254, p = 0.156 (ns)
adonis(bc.nc.mc ~ log(ger.chem$MePBavg)) ## R2 = 0.09015, p = 0.06 . (marginally signif)
adonis(bc.nc.mc ~ log(ger.chem$PrPBavg)) ## R2 = 0.09308, p = 0.045 *
adonis(bc.nc.mc ~ log(ger.chem$BuPBavg)) ## R2 = 0.08765, p = 0.055 . (marginally signif)
ger.ardb.mc <- ger.ardb[,colnames(ger.ardb) %in% rownames(ger.chem)] ## n = 18
ger.chem.2 <- ger.chem[rownames(ger.chem) %in% colnames(ger.ardb.mc),]
ger.chem.2 <- ger.chem.2[match(rownames(t(ger.ardb.mc)), rownames(ger.chem.2)),]
identical(rownames(t(ger.ardb.mc)), rownames(ger.chem.2))
bc.ardb.mc <- vegdist(t(ger.ardb.mc))
euc.ardb.mc <- dist(t(ger.ardb.mc))
can.ardb.mc <- vegdist(t(ger.ardb.mc), method = 'canberra')
jac.ardb.mc <- vegdist(t(ger.ardb.mc), method = 'jaccard')
gow.ardb.mc <- vegdist(t(ger.ardb.mc), method = 'gower')
horn.ardb.mc <- vegdist(t(ger.ardb.mc), method = 'horn')
par(mfrow = c(2,3))
hist(bc.ardb.mc, breaks = 10, main = 'Bray-Curtis(ARDB resistome)',
xlab = 'Pairwise Bray-Curtis dissimilarity', col = mycol.9[9]) ## skewed left tail
hist(euc.ardb.mc, breaks = 10, main = 'Euclidean(ARDB resistome)',
xlab = 'Pairwise Euclidean distance', col = mycol.9[9]) ## roughly normal, but gappy
hist(can.ardb.mc, breaks = 10, main = 'Canberra(ARDB resistome)',
xlab = 'Pairwise Canberra distance', col = mycol.9[9]) ## skewed left tail
hist(jac.ardb.mc, breaks = 10, main = 'Jaccard(ARDB resistome)',
xlab = 'Pairwise Jaccard distance', col = mycol.9[9]) ## skewed left tail
hist(gow.ardb.mc, breaks = 10, main = 'Gower(ARDB resistome)',
xlab = 'Pairwise Gower distance', col = mycol.9[9]) ## roughly normal
hist(horn.ardb.mc, breaks = 10, main = 'Horn-Morisita(ARDB resistome)',
xlab = 'Pairwise Horn-Morisita distance', col = mycol.9[9]) ## skewed/bimodal
par(mfrow = c(1,2))
euc.chem.2 <- dist(ger.chem.2)
hist(euc.chem.2, breaks = 10, main = 'dist(chemical profile)',
xlab = 'Pairwise Euclidean distance', col = mycol.9[9]) ## weighted toward low dist
euc.chem.2.log <- log(dist(ger.chem.2)) ## transform dist(raw [chem])
hist(euc.chem.2.log, breaks = 10, main = 'log[dist(chemical profile)]',
xlab = 'log(pairwise Euclidean distance)', col = mycol.9[9]) ## roughly normal
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
hist(log(dist(ger.chem.2[,i])), breaks = 10, col = mycol.9[9],
main = paste0('log[dist(', i, ')]'),
xlab = paste0('log Euclidean distance'))} ## mostly normal
par(mfrow = c(1,1))
plot(gow.ardb.mc ~ euc.chem.2.log, col = mycol.9[9],
ylab = 'Gower dissimilarity of ARDB resistome profiles',
xlab = 'log Euclidean distance of chemical profiles')
mantel(gow.ardb.mc, euc.chem.2.log) ## * r = 0.4521, p = 0.015
par(mfrow = c(2,3))
for(i in c('TCSavg', 'TCCavg', 'MePBavg', 'EtPBavg', 'PrPBavg', 'BuPBavg')){
ger.dist.tmp <- log(dist(ger.chem.2[,i]))
plot(gow.ardb.mc ~ ger.dist.tmp, main = i, col = mycol.9[9],
ylab = 'Gower dissimilarity of ARDB resistome',
xlab = paste0('log Euclidean distance of [chemical]'))}
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'TCSavg']) + 0.0001)) ## ns
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'TCCavg']) + 0.0001)) ## * r = 0.492, p = 0.012
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'MePBavg']) + 0.0001)) ## . r = 0.1531, p = 0.054
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'EtPBavg']) + 0.0001)) ## ns
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'PrPBavg']) + 0.0001)) ## ns
mantel(gow.ardb.mc, log(dist(ger.chem.2[,'BuPBavg']) + 0.0001)) ## ns
adonis(vegdist(t(ger.ardb), method = 'gower') ~ ger.meta.map.nc$SpaceTypeBioBE) ## 0.34438  0.011 *
adonis(gow.ardb.mc ~ ger.chem.2$TCCavg) ## 0.11164  0.119
adonis(gow.ardb.mc ~ ger.chem.2$TCSavg) ## 0.11718  0.127
adonis(gow.ardb.mc ~ ger.chem.2$EtPBavg) ## 0.08669  0.169
adonis(gow.ardb.mc ~ ger.chem.2$MePBavg) ## 0.11173  0.043 *
adonis(gow.ardb.mc ~ ger.chem.2$PrPBavg) ## 0.08387  0.177
adonis(gow.ardb.mc ~ ger.chem.2$BuPBavg) ## 0.08796  0.147
ggsave('~/Documents/projects/dust_2015/figures/mantel_tax_chem.png', width = 6.5, height = 6.5, units = 'in')
ggplot(gg.dat, aes(x = dist.2, y = dist.1)) +
geom_point(colour = my.color, alpha = 0.8, size = 2) +
stat_smooth(colour = my.color, linetype = 2, method = "lm", formula = y ~ poly(x, 1), fill = my.color, level = .95) + ## fit a 2nd order polynomial. you can change the '2' value in poly() to fit different functions (e.g., 1 for a line)
guides(colour = FALSE, fill = FALSE) +
xlab('Chemical profile distance (Euclidean)') +
ylab('Community distance (Canberra)') +
#   geom_text(data = NULL, x = 8.25, y = 0.58, label = "r = 0.2039\np < 0.09",
#             size = 8) +
theme(panel.grid.minor = element_blank())
ggsave('~/Documents/projects/dust_2015/figures/mantel_tax_chem.png', width = 6.5, height = 6.5, units = 'in')
